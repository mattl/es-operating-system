/*
 * Copyright 2008, 2009 Google Inc.
 * Copyright 2006, 2007 Nintendo Co., Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef NINTENDO_ES_DEVICE_INETWORKINTERFACE_IDL_INCLUDED
#define NINTENDO_ES_DEVICE_INETWORKINTERFACE_IDL_INCLUDED

module es
{
    typedef octet Mac[6];

    interface NetworkInterface
    {
        // Interface type [http://www.iana.org/assignments/smi-numbers]
        const long Other = 1;      // none of the following
        const long Ethernet = 6;   // Ethernet CSMACD
        const long FDDI = 15;      // FDDI
        const long PPP = 23;       // RFC 1331
        const long Loopback = 24;  // loopback

        /** Allows this network interface to receive frames sent to the specified
         * multicast MAC address.
         * @param mac the MAC address.
         */
        long addMulticastAddress(in Mac mac);

        /** Gets the current link state of this network interface.
         */
        boolean getLinkState();

        /** Gets the MAC address of this network interface.
         * @param mac the MAC address.
         */
        readonly attribute Mac macAddress;

        /** Forbids this network interface to receive Ethernet frames sent to the
         * specified multicast MAC address.
         * @param mac the MAC address.
         */
        long removeMulticastAddress(in Mac mac);

        /** Starts this network interface.
         */
        long start();

        /** Stops this network interface.
         */
        long stop();

        /** Maximum transmission unit of this network interface.
         */
        readonly attribute long MTU;

        /** The statistics of this network interface.
         */
        readonly attribute unsigned long long  inOctets;        // The total number of octets received.
        readonly attribute unsigned long       inUcastPkts;     // The number of unicast packets delivered.
        readonly attribute unsigned long       inNUcastPkts;    // The number of non-unicast delivered.
        readonly attribute unsigned long       inDiscards;      // The number of inbound packets discarded.
        readonly attribute unsigned long       inErrors;        // The number of inbound packets that contained errors.
        readonly attribute unsigned long       inUnknownProtos; // The number of inbound packets discarded because of an unknown or unsupported protocol.
        readonly attribute unsigned long long  outOctets;       // The total number of octets transmitted.
        readonly attribute unsigned long       outUcastPkts;    // The total number of packets transmitted to a unicast address.
        readonly attribute unsigned long       outNUcastPkts;   // The total number of packets transmitted to a non-unicast address.
        readonly attribute unsigned long       outDiscards;     // The number of outbound packets discarded.
        readonly attribute unsigned long       outErrors;       // The number of outbound packets that could not be transmitted because of errors.
        readonly attribute unsigned long       outCollisions;   // Collisions on CSMA

        /** The type of interface.
         */
        readonly attribute long type;

        /** Boolean if the promiscuous mode of this network interface is enabled or
         * not.
         */
        attribute boolean promiscuousMode;
    };
};

#endif // NINTENDO_ES_DEVICE_INETWORKINTERFACE_IDL_INCLUDED

