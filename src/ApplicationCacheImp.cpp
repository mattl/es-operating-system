// Generated by esidl 0.2.1.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "ApplicationCacheImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

unsigned short ApplicationCacheImp::getStatus()
{
    // TODO: implement me!
    return 0;
}

void ApplicationCacheImp::update()
{
    // TODO: implement me!
}

void ApplicationCacheImp::swapCache()
{
    // TODO: implement me!
}

html::Function ApplicationCacheImp::getOnchecking()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void ApplicationCacheImp::setOnchecking(html::Function onchecking)
{
    // TODO: implement me!
}

html::Function ApplicationCacheImp::getOnerror()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void ApplicationCacheImp::setOnerror(html::Function onerror)
{
    // TODO: implement me!
}

html::Function ApplicationCacheImp::getOnnoupdate()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void ApplicationCacheImp::setOnnoupdate(html::Function onnoupdate)
{
    // TODO: implement me!
}

html::Function ApplicationCacheImp::getOndownloading()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void ApplicationCacheImp::setOndownloading(html::Function ondownloading)
{
    // TODO: implement me!
}

html::Function ApplicationCacheImp::getOnprogress()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void ApplicationCacheImp::setOnprogress(html::Function onprogress)
{
    // TODO: implement me!
}

html::Function ApplicationCacheImp::getOnupdateready()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void ApplicationCacheImp::setOnupdateready(html::Function onupdateready)
{
    // TODO: implement me!
}

html::Function ApplicationCacheImp::getOncached()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void ApplicationCacheImp::setOncached(html::Function oncached)
{
    // TODO: implement me!
}

html::Function ApplicationCacheImp::getOnobsolete()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void ApplicationCacheImp::setOnobsolete(html::Function onobsolete)
{
    // TODO: implement me!
}

void ApplicationCacheImp::addEventListener(const std::u16string& type, events::EventListener listener)
{
    // TODO: implement me!
}

void ApplicationCacheImp::addEventListener(const std::u16string& type, events::EventListener listener, bool capture)
{
    // TODO: implement me!
}

void ApplicationCacheImp::removeEventListener(const std::u16string& type, events::EventListener listener)
{
    // TODO: implement me!
}

void ApplicationCacheImp::removeEventListener(const std::u16string& type, events::EventListener listener, bool capture)
{
    // TODO: implement me!
}

bool ApplicationCacheImp::dispatchEvent(events::Event event)
{
    // TODO: implement me!
    return 0;
}

}
}
}
}
