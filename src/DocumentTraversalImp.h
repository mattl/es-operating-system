// Generated by esidl (r1745).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_DOCUMENTTRAVERSALIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_DOCUMENTTRAVERSALIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/traversal/DocumentTraversal.h>

#include <org/w3c/dom/traversal/NodeIterator.h>
#include <org/w3c/dom/traversal/NodeFilter.h>
#include <org/w3c/dom/traversal/TreeWalker.h>
#include <org/w3c/dom/DOMException.h>
#include <org/w3c/dom/Node.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class DocumentTraversalImp : public ObjectMixin<DocumentTraversalImp>
{
public:
    // DocumentTraversal
    traversal::NodeIterator createNodeIterator(Node root, unsigned int whatToShow, traversal::NodeFilter filter, bool entityReferenceExpansion) throw(DOMException);
    traversal::TreeWalker createTreeWalker(Node root, unsigned int whatToShow, traversal::NodeFilter filter, bool entityReferenceExpansion) throw(DOMException);
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return traversal::DocumentTraversal::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return traversal::DocumentTraversal::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_DOCUMENTTRAVERSALIMP_H_INCLUDED
