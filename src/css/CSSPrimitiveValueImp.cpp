// Generated by esidl 0.2.1.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "CSSPrimitiveValueImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

unsigned short CSSPrimitiveValueImp::getPrimitiveType()
{
    // TODO: implement me!
    return 0;
}

void CSSPrimitiveValueImp::setFloatValue(unsigned short unitType, float floatValue) throw(DOMException)
{
    // TODO: implement me!
}

float CSSPrimitiveValueImp::getFloatValue(unsigned short unitType) throw(DOMException)
{
    // TODO: implement me!
    return 0;
}

void CSSPrimitiveValueImp::setStringValue(unsigned short stringType, const std::u16string& stringValue) throw(DOMException)
{
    // TODO: implement me!
}

std::u16string CSSPrimitiveValueImp::getStringValue() throw(DOMException)
{
    // TODO: implement me!
    return u"";
}

css::Counter CSSPrimitiveValueImp::getCounterValue() throw(DOMException)
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

css::Rect CSSPrimitiveValueImp::getRectValue() throw(DOMException)
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

css::RGBColor CSSPrimitiveValueImp::getRGBColorValue() throw(DOMException)
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

}
}
}
}
