// Generated by esidl 0.2.1.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "DataViewImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

signed char DataViewImp::getInt8(unsigned int byteOffset)
{
    // TODO: implement me!
    return 0;
}

unsigned char DataViewImp::getUint8(unsigned int byteOffset)
{
    // TODO: implement me!
    return 0;
}

short DataViewImp::getInt16(unsigned int byteOffset)
{
    // TODO: implement me!
    return 0;
}

short DataViewImp::getInt16(unsigned int byteOffset, bool littleEndian)
{
    // TODO: implement me!
    return 0;
}

unsigned short DataViewImp::getUint16(unsigned int byteOffset)
{
    // TODO: implement me!
    return 0;
}

unsigned short DataViewImp::getUint16(unsigned int byteOffset, bool littleEndian)
{
    // TODO: implement me!
    return 0;
}

int DataViewImp::getInt32(unsigned int byteOffset)
{
    // TODO: implement me!
    return 0;
}

int DataViewImp::getInt32(unsigned int byteOffset, bool littleEndian)
{
    // TODO: implement me!
    return 0;
}

unsigned int DataViewImp::getUint32(unsigned int byteOffset)
{
    // TODO: implement me!
    return 0;
}

unsigned int DataViewImp::getUint32(unsigned int byteOffset, bool littleEndian)
{
    // TODO: implement me!
    return 0;
}

float DataViewImp::getFloat32(unsigned int byteOffset)
{
    // TODO: implement me!
    return 0;
}

float DataViewImp::getFloat32(unsigned int byteOffset, bool littleEndian)
{
    // TODO: implement me!
    return 0;
}

double DataViewImp::getFloat64(unsigned int byteOffset)
{
    // TODO: implement me!
    return 0;
}

double DataViewImp::getFloat64(unsigned int byteOffset, bool littleEndian)
{
    // TODO: implement me!
    return 0;
}

void DataViewImp::setInt8(unsigned int byteOffset, signed char value)
{
    // TODO: implement me!
}

void DataViewImp::setUint8(unsigned int byteOffset, unsigned char value)
{
    // TODO: implement me!
}

void DataViewImp::setInt16(unsigned int byteOffset, short value)
{
    // TODO: implement me!
}

void DataViewImp::setInt16(unsigned int byteOffset, short value, bool littleEndian)
{
    // TODO: implement me!
}

void DataViewImp::setUint16(unsigned int byteOffset, unsigned short value)
{
    // TODO: implement me!
}

void DataViewImp::setUint16(unsigned int byteOffset, unsigned short value, bool littleEndian)
{
    // TODO: implement me!
}

void DataViewImp::setInt32(unsigned int byteOffset, int value)
{
    // TODO: implement me!
}

void DataViewImp::setInt32(unsigned int byteOffset, int value, bool littleEndian)
{
    // TODO: implement me!
}

void DataViewImp::setUint32(unsigned int byteOffset, unsigned int value)
{
    // TODO: implement me!
}

void DataViewImp::setUint32(unsigned int byteOffset, unsigned int value, bool littleEndian)
{
    // TODO: implement me!
}

void DataViewImp::setFloat32(unsigned int byteOffset, float value)
{
    // TODO: implement me!
}

void DataViewImp::setFloat32(unsigned int byteOffset, float value, bool littleEndian)
{
    // TODO: implement me!
}

void DataViewImp::setFloat64(unsigned int byteOffset, double value)
{
    // TODO: implement me!
}

void DataViewImp::setFloat64(unsigned int byteOffset, double value, bool littleEndian)
{
    // TODO: implement me!
}

}
}
}
}
