// Generated by esidl (r1752).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "MessagePortImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

void MessagePortImp::postMessage(Any message)
{
    // TODO: implement me!
}

void MessagePortImp::postMessage(Any message, Sequence<html::Transferable> transfer)
{
    // TODO: implement me!
}

void MessagePortImp::start()
{
    // TODO: implement me!
}

void MessagePortImp::close()
{
    // TODO: implement me!
}

html::Function MessagePortImp::getOnmessage()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void MessagePortImp::setOnmessage(html::Function onmessage)
{
    // TODO: implement me!
}

void MessagePortImp::addEventListener(std::u16string type, events::EventListener listener)
{
    // TODO: implement me!
}

void MessagePortImp::addEventListener(std::u16string type, events::EventListener listener, bool capture)
{
    // TODO: implement me!
}

void MessagePortImp::removeEventListener(std::u16string type, events::EventListener listener)
{
    // TODO: implement me!
}

void MessagePortImp::removeEventListener(std::u16string type, events::EventListener listener, bool capture)
{
    // TODO: implement me!
}

bool MessagePortImp::dispatchEvent(events::Event event)
{
    // TODO: implement me!
    return 0;
}

}
}
}
}
