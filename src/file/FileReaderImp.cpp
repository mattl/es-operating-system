// Generated by esidl 0.2.1.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "FileReaderImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

void FileReaderImp::readAsArrayBuffer(file::Blob blob)
{
    // TODO: implement me!
}

void FileReaderImp::readAsBinaryString(file::Blob blob)
{
    // TODO: implement me!
}

void FileReaderImp::readAsText(file::Blob blob)
{
    // TODO: implement me!
}

void FileReaderImp::readAsText(file::Blob blob, const std::u16string& encoding)
{
    // TODO: implement me!
}

void FileReaderImp::readAsDataURL(file::Blob blob)
{
    // TODO: implement me!
}

void FileReaderImp::abort()
{
    // TODO: implement me!
}

unsigned short FileReaderImp::getReadyState()
{
    // TODO: implement me!
    return 0;
}

Any FileReaderImp::getResult()
{
    // TODO: implement me!
    return 0;
}

file::FileError FileReaderImp::getError()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

html::Function FileReaderImp::getOnloadstart()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void FileReaderImp::setOnloadstart(html::Function onloadstart)
{
    // TODO: implement me!
}

html::Function FileReaderImp::getOnprogress()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void FileReaderImp::setOnprogress(html::Function onprogress)
{
    // TODO: implement me!
}

html::Function FileReaderImp::getOnload()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void FileReaderImp::setOnload(html::Function onload)
{
    // TODO: implement me!
}

html::Function FileReaderImp::getOnabort()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void FileReaderImp::setOnabort(html::Function onabort)
{
    // TODO: implement me!
}

html::Function FileReaderImp::getOnerror()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void FileReaderImp::setOnerror(html::Function onerror)
{
    // TODO: implement me!
}

html::Function FileReaderImp::getOnloadend()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void FileReaderImp::setOnloadend(html::Function onloadend)
{
    // TODO: implement me!
}

}
}
}
}
