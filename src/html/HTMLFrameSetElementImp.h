// Generated by esidl 0.2.1.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_HTMLFRAMESETELEMENTIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_HTMLFRAMESETELEMENTIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/html/HTMLFrameSetElement.h>
#include "HTMLElementImp.h"

#include <org/w3c/dom/html/HTMLElement.h>
#include <org/w3c/dom/html/Function.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class HTMLFrameSetElementImp : public ObjectMixin<HTMLFrameSetElementImp, HTMLElementImp>
{
public:
    // HTMLFrameSetElement
    std::u16string getCols();
    void setCols(const std::u16string& cols);
    std::u16string getRows();
    void setRows(const std::u16string& rows);
    html::Function getOnafterprint();
    void setOnafterprint(html::Function onafterprint);
    html::Function getOnbeforeprint();
    void setOnbeforeprint(html::Function onbeforeprint);
    html::Function getOnbeforeunload();
    void setOnbeforeunload(html::Function onbeforeunload);
    html::Function getOnblur();
    void setOnblur(html::Function onblur);
    html::Function getOnerror();
    void setOnerror(html::Function onerror);
    html::Function getOnfocus();
    void setOnfocus(html::Function onfocus);
    html::Function getOnhashchange();
    void setOnhashchange(html::Function onhashchange);
    html::Function getOnload();
    void setOnload(html::Function onload);
    html::Function getOnmessage();
    void setOnmessage(html::Function onmessage);
    html::Function getOnoffline();
    void setOnoffline(html::Function onoffline);
    html::Function getOnonline();
    void setOnonline(html::Function ononline);
    html::Function getOnpagehide();
    void setOnpagehide(html::Function onpagehide);
    html::Function getOnpageshow();
    void setOnpageshow(html::Function onpageshow);
    html::Function getOnpopstate();
    void setOnpopstate(html::Function onpopstate);
    html::Function getOnredo();
    void setOnredo(html::Function onredo);
    html::Function getOnresize();
    void setOnresize(html::Function onresize);
    html::Function getOnscroll();
    void setOnscroll(html::Function onscroll);
    html::Function getOnstorage();
    void setOnstorage(html::Function onstorage);
    html::Function getOnundo();
    void setOnundo(html::Function onundo);
    html::Function getOnunload();
    void setOnunload(html::Function onunload);
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return html::HTMLFrameSetElement::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return html::HTMLFrameSetElement::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_HTMLFRAMESETELEMENTIMP_H_INCLUDED
