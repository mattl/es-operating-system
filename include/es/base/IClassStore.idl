/*
 * Copyright 2008, 2009 Google Inc.
 * Copyright 2006, 2007 Nintendo Co., Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef NINTENDO_ES_BASE_ICLASSSTORE_IDL_INCLUDED
#define NINTENDO_ES_BASE_ICLASSSTORE_IDL_INCLUDED

#include "es/base/IClassFactory.idl"

module es
{
    /**
     * This interface provides methods for managing class factories.
     */
    interface ClassStore
    {
        /**
         * Registers the specified class factory in this class store.
         * @param rclsid    the class ID.
         * @param factory   the class factory.
         */
        void add(in uuid rclsid, in ClassFactory factory);
        /**
         * Removes the specified class factory from this class store.
         * @param rclsid    the class ID.
         */
        void remove(in uuid rclsid);
        /**
         * Creates an object from the class factory identified with the specified class ID.
         * The class factory must be registered in this class store.
         * @param rclsid    the class ID of the class factory.
         * @param iid       the interface ID of the interface to be used to communicate with the new object.
         * @return the new object if the object is successfully created. Otherwise, null.
         */
        Object createInstance(in uuid rclsid, in string riid);
    };
};

#endif // NINTENDO_ES_BASE_ICLASSSTORE_IDL_INCLUDED

