/*
 * Copyright (c) 2006, 2007
 * Nintendo Co., Ltd.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Nintendo makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided "as is" without express or implied warranty.
 */

#ifndef NINTENDO_ES_BASE_ISTREAM_IDL_INCLUDED
#define NINTENDO_ES_BASE_ISTREAM_IDL_INCLUDED

#include "es/base/IInterface.idl"

module es
{
    /** This interface provides methods for accessing a sequence of bytes.
     */
    interface IStream : IInterface
    {
        #pragma ID IStream = "DCE:032c16c8-25db-11db-9c02-0009bf000001";

        typedef sequence<octet> Buf;

        /** The current position in this stream.
         */
        attribute long long position;

        /** The current size of this stream in bytes.
         * @return the current size.
         */
        attribute long long size;

        /** Reads a sequence of bytes from this stream to <code>buf</code>.
         * @param buf       the buffer into which the bytes is read.
         * @param bufLength the maximum number of bytes to be read.
         * @return the number of bytes read.
         */
        Buf read();

        /** Reads a sequence of bytes from <code>offset</code> in this stream
         * to <code>buf</code>.
         * @param buf       the buffer into which the bytes is read.
         * @param bufLength the maximum number of bytes to be read.
         * @param offset    the position in this stream from which the bytes is read.
         * @return the number of bytes read.
         */
        Buf read(in long long offset);

        /** Writes a sequence of bytes from <code>src</code> to this stream.
         * @param src       the buffer from which bytes are copied.
         * @param srcLength the maximum number of bytes to be written.
         * @return the number of bytes written.
         */
        long write(in Buf src);

        /** Writes a sequence of bytes from <code>src</code> to <code>offset</code>
         * in this stream.
         * @param src       the buffer from which bytes are copied.
         * @param srcLength the maximum number of bytes to be written.
         * @param offset    the position in this stream from which the bytes is written.
         * @return the number of bytes written.
         */
        long write(in Buf src, in long long offset);

        /** Forces any buffered output data for this stream to be written out.
         */
        void flush();
    };
};

#endif // NINTENDO_ES_BASE_ISTREAM_IDL_INCLUDED

