/*
 * Copyright 2008 Google Inc.
 * Copyright 2006, 2007 Nintendo Co., Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef NINTENDO_ES_BASE_ISTREAM_IDL_INCLUDED
#define NINTENDO_ES_BASE_ISTREAM_IDL_INCLUDED

#include "es/base/IInterface.idl"

module es
{
    /** This interface provides methods for accessing a sequence of bytes.
     */
    interface IStream : IInterface
    {
        #pragma ID IStream = "DCE:032c16c8-25db-11db-9c02-0009bf000001";

        typedef sequence<octet> Buf;

        /** The current position in this stream.
         */
        attribute long long position;

        /** The current size of this stream in bytes.
         * @return the current size.
         */
        attribute long long size;

        /** Reads a sequence of bytes from this stream to <code>buf</code>.
         * @param buf       the buffer into which the bytes is read.
         * @param bufLength the maximum number of bytes to be read.
         * @return the number of bytes read.
         */
        Buf read();

        /** Reads a sequence of bytes from <code>offset</code> in this stream
         * to <code>buf</code>.
         * @param buf       the buffer into which the bytes is read.
         * @param bufLength the maximum number of bytes to be read.
         * @param offset    the position in this stream from which the bytes is read.
         * @return the number of bytes read.
         */
        Buf read(in long long offset);

        /** Writes a sequence of bytes from <code>src</code> to this stream.
         * @param src       the buffer from which bytes are copied.
         * @param srcLength the maximum number of bytes to be written.
         * @return the number of bytes written.
         */
        long write(in Buf src);

        /** Writes a sequence of bytes from <code>src</code> to <code>offset</code>
         * in this stream.
         * @param src       the buffer from which bytes are copied.
         * @param srcLength the maximum number of bytes to be written.
         * @param offset    the position in this stream from which the bytes is written.
         * @return the number of bytes written.
         */
        long write(in Buf src, in long long offset);

        /** Forces any buffered output data for this stream to be written out.
         */
        void flush();
    };
};

#endif // NINTENDO_ES_BASE_ISTREAM_IDL_INCLUDED

