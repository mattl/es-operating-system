/*
 * Copyright 2008, 2009 Google Inc.
 * Copyright 2006, 2007 Nintendo Co., Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef NINTENDO_ES_DEVICE_IDMAC_IDL_INCLUDED
#define NINTENDO_ES_DEVICE_IDMAC_IDL_INCLUDED

module es
{
    /**
     * This interface provides methods for managing a DMA controller.
     */
    interface Dmac
    {
        typedef sequence<octet> Buf;

        /**
         * DMA transfer mode.
         */
        const long READ = 0x04;
        const long WRITE = 0x08;
        const long AUTO_INITIALIZE = 0x10;

        /**
         * Sets up this DMA controller.
         * @param addr the address of the memory accessed by this DMA controller.
         * @param addrLength the DMA transfer counter.
         * @param mode <code>READ</code>, <code>WRITE</code> or <code>AUTO_INITIALIZE</code>.
         */
        void setup(in Buf addr, in octet mode);
        /**
         * Starts the DMA transfer.
         */
        void start();
        /**
         * Terminates the DMA transfer.
         */
        void stop();
        /**
         * Boolean whether the DMA transfer is complete.
         */
        boolean isDone();
        /**
         * The current DMA transfer counter of this DMA controller.
         */
        readonly attribute long count;
    };
};

#endif // NINTENDO_ES_DEVICE_IDMAC_IDL_INCLUDED

