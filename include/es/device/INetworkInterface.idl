/*
 * Copyright (c) 2006, 2007
 * Nintendo Co., Ltd.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Nintendo makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided "as is" without express or implied warranty.
 */

#ifndef NINTENDO_ES_DEVICE_INETWORKINTERFACE_IDL_INCLUDED
#define NINTENDO_ES_DEVICE_INETWORKINTERFACE_IDL_INCLUDED

#include "es/base/IInterface.idl"

module es
{
    interface INetworkInterface : IInterface
    {
        #pragma ID INetworkInterface = "DCE:0069e36a-c85c-11db-9c02-0009bf000001";

        // Interface type [http://www.iana.org/assignments/smi-numbers]
        const long Other = 1;      // none of the following
        const long Ethernet = 6;   // Ethernet CSMACD
        const long FDDI = 15;      // FDDI
        const long PPP = 23;       // RFC 1331
        const long Loopback = 24;  // loopback

        struct Statistics
        {
            unsigned long long  inOctets;        // The total number of octets received.
            unsigned long       inUcastPkts;     // The number of unicast packets delivered.
            unsigned long       inNUcastPkts;    // The number of non-unicast delivered.
            unsigned long       inDiscards;      // The number of inbound packets discarded.
            unsigned long       inErrors;        // The number of inbound packets that contained errors.
            unsigned long       inUnknownProtos; // The number of inbound packets discarded because of an unknown or unsupported protocol.
            unsigned long long  outOctets;       // The total number of octets transmitted.
            unsigned long       outUcastPkts;    // The total number of packets transmitted to a unicast address.
            unsigned long       outNUcastPkts;   // The total number of packets transmitted to a non-unicast address.
            unsigned long       outDiscards;     // The number of outbound packets discarded.
            unsigned long       outErrors;       // The number of outbound packets that could not be transmitted because of errors.

            unsigned long       outCollisions;   // Collisions on CSMA
        };

        typedef octet Mac[6];

        /** Allows this network interface to receive frames sent to the specified
         * multicast MAC address.
         * @param mac the MAC address.
         */
        long addMulticastAddress(in Mac mac);

        /** Gets the current link state of this network interface.
         */
        boolean getLinkState();

        /** Gets the MAC address of this network interface.
         * @param mac the MAC address.
         */
        void getMacAddress(out Mac mac);

        /** Forbids this network interface to receive Ethernet frames sent to the
         * specified multicast MAC address.
         * @param mac the MAC address.
         */
        long removeMulticastAddress(in Mac mac);

        /** Starts this network interface.
         */
        long start();

        /** Stops this network interface.
         */
        long stop();

        /** Maximum transmission unit of this network interface.
         */
        readonly attribute long MTU;

        /** The statistics of this network interface.
         */
        readonly attribute Statistics statistics;

        /** The type of interface.
         */
        readonly attribute long type;

        /** Boolean if the promiscuous mode of this network interface is enabled or
         * not.
         */
        attribute boolean promiscuousMode;
    };
};

#endif // NINTENDO_ES_DEVICE_INETWORKINTERFACE_IDL_INCLUDED

