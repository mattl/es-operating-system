/*
 * Copyright (c) 2006
 * Nintendo Co., Ltd.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Nintendo makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided "as is" without express or implied warranty.
 */

import "es/base/IInterface.idl";

/**
 * This interface represents a PIC (Programmable Interrupt Controller).
 */
[object, uuid(83a89884-25dc-11db-9c02-0009bf000001)]
interface IPic : IInterface
{
    /**
     * Starts the specified IRQ in this PIC.
     * @param irq IRQ line.
     */
    void startup(unsigned int irq);
    /**
     * Stops the specified IRQ in this PIC.
     * @param irq IRQ line.
     */
    void shutdown(unsigned int irq);
    /**
     * Enables the specified IRQ line.
     * @param irq IRQ line.
     */
    void enable(unsigned int irq);
    /**
     * Disables the specified IRQ line.
     * @param irq IRQ line.
     */
    void disable(unsigned int irq);
    /**
     * Checks if an interrupt acknowledge is received in the specified IRQ line.
     * @param irq IRQ line.
     */
    boolean ack(unsigned int irq);

    /**
     * This is called at termination of IRQ handler.
     */
    void end(unsigned int irq);

    /**
     * Sets affinity for the specified CPU.
     */
    void setAffinity(unsigned int irq, unsigned int cpuMask);
}
