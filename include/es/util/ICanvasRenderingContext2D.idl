/*
 * Copyright (c) 2006, 2007
 * Nintendo Co., Ltd.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Nintendo makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided "as is" without express or implied warranty.
 */

import "es/base/IInterface.idl";

/**
 */
[object, uuid(8661833f-25d8-4d4c-999c-ede0fcbbbf32)]
interface ICanvasRenderingContext2D : IInterface
{
    // State Methods
    void restore();
    void save();
    void rotate(float angle);
    void scale(float scaleW, float scaleH);
    void translate(float tx, float ty);

    // Working With Paths
    void arc(float x, float y, float radius, float startAngle, float endAngle, boolean anticlockwise);
    void arcTo(float x1, float y1, float x2, float y2, float radius); // [check]
    void bezierCurveTo(float cp1x, float cp1y, float cp2x, float cp2y, float x, float y);

    void beginPath();
    void clip();
    void closePath();
    void lineTo(float x, float y);
    void moveTo(float x, float y);
    void quadraticCurveTo(float cpx, float cpy, float x, float y);
    void rect(float x, float y, float width, float height);

    // Stroking a Path
    void stroke();
    void strokeRect(float x, float y, float width, float height);

    // Filling an Area
    void clearRect(float x, float y, float width, float height);
    void fill();
    void fillRect(float x, float y, float width, float height);

    int getFillStyle([out, size_is(len)] char* color, unsigned int len);
    int getStrokeStyle([out, size_is(len)] char* operation, unsigned int len);
    float getGlobalAlpha();
    float getMiterLimit();
    int getLineCap([out, size_is(len)] char* capStyle, unsigned int len);
    int getLineJoin([out, size_is(len)] char* joinStyle, unsigned int len);
    float getLineWidth();

    void setFillStyle([in] char* color);
    void setStrokeStyle([in] char* color);
    void setGlobalAlpha(float alpha);
    void setLineCap([in] char* capStyle);
    void setMiterLimit(float limit);
    void setLineJoin([in] char* joinStyle);
    void setLineWidth(float width);
}
