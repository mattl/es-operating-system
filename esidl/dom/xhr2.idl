/*
 * xhr.idl
 *
 * XMLHttpRequest Level 2 IDL definitions scraped from the W3C specification, revised for esidl.
 *
 * Original W3C Working Draft:
 *
 *   http://www.w3.org/TR/2009/WD-XMLHttpRequest2-20090820/
 */

module dom {

typedef events::EventTarget EventTarget;
typedef html::Function Function;

typedef sequence<octet> ByteArray;  // TBD at W3C

[NoInterfaceObject]
interface XMLHttpRequestEventTarget : EventTarget {
  // event handler attributes
           attribute Function onloadstart;
           attribute Function onprogress;
           attribute Function onabort;
           attribute Function onerror;
           attribute Function onload;
           attribute Function onloadend;
};

interface XMLHttpRequestUpload : XMLHttpRequestEventTarget {
  // for future use
};

[Constructor]
interface XMLHttpRequest : XMLHttpRequestEventTarget {
  // event handler attributes
           attribute Function onreadystatechange;

  // states
  const unsigned short UNSENT = 0;
  const unsigned short OPENED = 1;
  const unsigned short HEADERS_RECEIVED = 2;
  const unsigned short LOADING = 3;
  const unsigned short DONE = 4;
  readonly attribute unsigned short readyState;

  // request
  void open(DOMString method, DOMString url);
  void open(DOMString method, DOMString url, boolean async);
  void open(DOMString method, DOMString url, boolean async, DOMString? user);
  void open(DOMString method, DOMString url, boolean async, DOMString? user, DOMString? password);
  void setRequestHeader(DOMString header, DOMString value);
           attribute boolean withCredentials;
  readonly attribute XMLHttpRequestUpload upload;
  void send();
  void send(ByteArray data);
  void send(Document data);
  void send([AllowAny] DOMString? data);
  void abort();

  // response
  readonly attribute unsigned short status;
  readonly attribute DOMString statusText;
  DOMString getResponseHeader(DOMString header);
  DOMString getAllResponseHeaders();
  void overrideMimeType(DOMString mime);
  readonly attribute ByteArray responseBody;
  readonly attribute DOMString responseText;
  readonly attribute Document responseXML;
};

};

