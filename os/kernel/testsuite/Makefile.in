# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
@POSIX_TRUE@am__append_1 = -iquote $(srcdir)/../include/posix
@ES_FALSE@@POSIX_TRUE@noinst_PROGRAMS = $(am__EXEEXT_1)
@ES_TRUE@noinst_PROGRAMS = $(am__EXEEXT_1)
@POSIX_TRUE@am__append_2 = -lpthread -lrt -lstdc++
@ES_TRUE@@I386_TRUE@am__append_3 = -iquote $(srcdir)/../include/i386
subdir = kernel/testsuite
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
@ES_FALSE@@POSIX_TRUE@am__EXEEXT_1 = handle$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	interlocked$(EXEEXT) exception$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	utf$(EXEEXT) ring$(EXEEXT) heap$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	page$(EXEEXT) cache$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	replace$(EXEEXT) position$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	size$(EXEEXT) write_read$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	write_read2$(EXEEXT) write$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	read$(EXEEXT) create_release$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	getPageCount$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	invalidate$(EXEEXT) context$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	datetime$(EXEEXT) thread$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	thread_cancel$(EXEEXT) monitor0$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	monitor1$(EXEEXT) monitor2$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	monitor3$(EXEEXT) pageSet$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	partition$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	partition_error$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	partition_extended$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	partition_iterator$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	partition_bind$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	partition_print$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	loopback$(EXEEXT) ethernet$(EXEEXT) \
@ES_FALSE@@POSIX_TRUE@	timer$(EXEEXT)
@ES_TRUE@am__EXEEXT_1 = handle$(EXEEXT) interlocked$(EXEEXT) \
@ES_TRUE@	exception$(EXEEXT) utf$(EXEEXT) ring$(EXEEXT) \
@ES_TRUE@	fpu$(EXEEXT) tsd$(EXEEXT) context$(EXEEXT) \
@ES_TRUE@	datetime$(EXEEXT) thread$(EXEEXT) \
@ES_TRUE@	thread_cancel$(EXEEXT) thread_smp$(EXEEXT) \
@ES_TRUE@	monitor0$(EXEEXT) monitor1$(EXEEXT) monitor2$(EXEEXT) \
@ES_TRUE@	monitor3$(EXEEXT) bpi$(EXEEXT) bpi2$(EXEEXT) \
@ES_TRUE@	bpi3$(EXEEXT) ata$(EXEEXT) beep$(EXEEXT) \
@ES_TRUE@	8042$(EXEEXT) vesa$(EXEEXT) fdc$(EXEEXT) \
@ES_TRUE@	fdc_diskChange$(EXEEXT) sb16$(EXEEXT) es1370$(EXEEXT) \
@ES_TRUE@	cdrom$(EXEEXT) page$(EXEEXT) cache$(EXEEXT) \
@ES_TRUE@	replace$(EXEEXT) position$(EXEEXT) size$(EXEEXT) \
@ES_TRUE@	write_read$(EXEEXT) write_read2$(EXEEXT) \
@ES_TRUE@	write$(EXEEXT) read$(EXEEXT) create_release$(EXEEXT) \
@ES_TRUE@	getPageCount$(EXEEXT) invalidate$(EXEEXT) \
@ES_TRUE@	pageSet$(EXEEXT) process$(EXEEXT) loopback$(EXEEXT) \
@ES_TRUE@	ethernet$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_8042_OBJECTS = 8042.$(OBJEXT)
8042_OBJECTS = $(am_8042_OBJECTS)
8042_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
8042_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_ata_OBJECTS = ata.$(OBJEXT)
ata_OBJECTS = $(am_ata_OBJECTS)
ata_LDADD = $(LDADD)
ata_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_beep_OBJECTS = beep.$(OBJEXT)
beep_OBJECTS = $(am_beep_OBJECTS)
beep_LDADD = $(LDADD)
beep_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_bpi_OBJECTS = bpi.$(OBJEXT)
bpi_OBJECTS = $(am_bpi_OBJECTS)
bpi_LDADD = $(LDADD)
bpi_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_bpi2_OBJECTS = bpi2.$(OBJEXT)
bpi2_OBJECTS = $(am_bpi2_OBJECTS)
bpi2_LDADD = $(LDADD)
bpi2_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_bpi3_OBJECTS = bpi3.$(OBJEXT)
bpi3_OBJECTS = $(am_bpi3_OBJECTS)
bpi3_LDADD = $(LDADD)
bpi3_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_cache_OBJECTS = cache.$(OBJEXT)
cache_OBJECTS = $(am_cache_OBJECTS)
cache_LDADD = $(LDADD)
cache_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_cdrom_OBJECTS = cdrom.$(OBJEXT)
cdrom_OBJECTS = $(am_cdrom_OBJECTS)
cdrom_LDADD = $(LDADD)
cdrom_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_context_OBJECTS = context.$(OBJEXT)
context_OBJECTS = $(am_context_OBJECTS)
context_LDADD = $(LDADD)
context_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_create_release_OBJECTS = create_release.$(OBJEXT)
create_release_OBJECTS = $(am_create_release_OBJECTS)
create_release_LDADD = $(LDADD)
create_release_DEPENDENCIES = ../libeskernel.a \
	../../libes++/libessup++.a $(am__DEPENDENCIES_1)
am_datetime_OBJECTS = datetime.$(OBJEXT)
datetime_OBJECTS = $(am_datetime_OBJECTS)
datetime_LDADD = $(LDADD)
datetime_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_es1370_OBJECTS = es1370.$(OBJEXT) wave.$(OBJEXT)
es1370_OBJECTS = $(am_es1370_OBJECTS)
es1370_LDADD = $(LDADD)
es1370_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_ethernet_OBJECTS = ethernet.$(OBJEXT)
ethernet_OBJECTS = $(am_ethernet_OBJECTS)
ethernet_LDADD = $(LDADD)
ethernet_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_exception_OBJECTS = exception.$(OBJEXT)
exception_OBJECTS = $(am_exception_OBJECTS)
exception_LDADD = $(LDADD)
exception_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_fdc_OBJECTS = fdc.$(OBJEXT)
fdc_OBJECTS = $(am_fdc_OBJECTS)
fdc_LDADD = $(LDADD)
fdc_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_fdc_diskChange_OBJECTS = fdc_diskChange.$(OBJEXT)
fdc_diskChange_OBJECTS = $(am_fdc_diskChange_OBJECTS)
fdc_diskChange_LDADD = $(LDADD)
fdc_diskChange_DEPENDENCIES = ../libeskernel.a \
	../../libes++/libessup++.a $(am__DEPENDENCIES_1)
am_fpu_OBJECTS = fpu.$(OBJEXT)
fpu_OBJECTS = $(am_fpu_OBJECTS)
fpu_LDADD = $(LDADD)
fpu_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_getPageCount_OBJECTS = getPageCount.$(OBJEXT)
getPageCount_OBJECTS = $(am_getPageCount_OBJECTS)
getPageCount_LDADD = $(LDADD)
getPageCount_DEPENDENCIES = ../libeskernel.a \
	../../libes++/libessup++.a $(am__DEPENDENCIES_1)
am_handle_OBJECTS = handle.$(OBJEXT)
handle_OBJECTS = $(am_handle_OBJECTS)
handle_LDADD = $(LDADD)
handle_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_heap_OBJECTS = heap.$(OBJEXT)
heap_OBJECTS = $(am_heap_OBJECTS)
heap_LDADD = $(LDADD)
heap_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_interlocked_OBJECTS = interlocked.$(OBJEXT)
interlocked_OBJECTS = $(am_interlocked_OBJECTS)
interlocked_LDADD = $(LDADD)
interlocked_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_invalidate_OBJECTS = invalidate.$(OBJEXT)
invalidate_OBJECTS = $(am_invalidate_OBJECTS)
invalidate_LDADD = $(LDADD)
invalidate_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_loopback_OBJECTS = loopback.$(OBJEXT)
loopback_OBJECTS = $(am_loopback_OBJECTS)
loopback_LDADD = $(LDADD)
loopback_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_monitor0_OBJECTS = monitor0.$(OBJEXT)
monitor0_OBJECTS = $(am_monitor0_OBJECTS)
monitor0_LDADD = $(LDADD)
monitor0_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_monitor1_OBJECTS = monitor1.$(OBJEXT)
monitor1_OBJECTS = $(am_monitor1_OBJECTS)
monitor1_LDADD = $(LDADD)
monitor1_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_monitor2_OBJECTS = monitor2.$(OBJEXT)
monitor2_OBJECTS = $(am_monitor2_OBJECTS)
monitor2_LDADD = $(LDADD)
monitor2_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_monitor3_OBJECTS = monitor3.$(OBJEXT)
monitor3_OBJECTS = $(am_monitor3_OBJECTS)
monitor3_LDADD = $(LDADD)
monitor3_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_page_OBJECTS = page.$(OBJEXT)
page_OBJECTS = $(am_page_OBJECTS)
page_LDADD = $(LDADD)
page_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_pageSet_OBJECTS = pageSet.$(OBJEXT)
pageSet_OBJECTS = $(am_pageSet_OBJECTS)
pageSet_LDADD = $(LDADD)
pageSet_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_partition_OBJECTS = partition.$(OBJEXT)
partition_OBJECTS = $(am_partition_OBJECTS)
partition_LDADD = $(LDADD)
partition_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_partition_bind_OBJECTS = partition_bind.$(OBJEXT)
partition_bind_OBJECTS = $(am_partition_bind_OBJECTS)
partition_bind_LDADD = $(LDADD)
partition_bind_DEPENDENCIES = ../libeskernel.a \
	../../libes++/libessup++.a $(am__DEPENDENCIES_1)
am_partition_error_OBJECTS = partition_error.$(OBJEXT)
partition_error_OBJECTS = $(am_partition_error_OBJECTS)
partition_error_LDADD = $(LDADD)
partition_error_DEPENDENCIES = ../libeskernel.a \
	../../libes++/libessup++.a $(am__DEPENDENCIES_1)
am_partition_extended_OBJECTS = partition_extended.$(OBJEXT)
partition_extended_OBJECTS = $(am_partition_extended_OBJECTS)
partition_extended_LDADD = $(LDADD)
partition_extended_DEPENDENCIES = ../libeskernel.a \
	../../libes++/libessup++.a $(am__DEPENDENCIES_1)
am_partition_iterator_OBJECTS = partition_iterator.$(OBJEXT)
partition_iterator_OBJECTS = $(am_partition_iterator_OBJECTS)
partition_iterator_LDADD = $(LDADD)
partition_iterator_DEPENDENCIES = ../libeskernel.a \
	../../libes++/libessup++.a $(am__DEPENDENCIES_1)
am_partition_print_OBJECTS = partition_print.$(OBJEXT)
partition_print_OBJECTS = $(am_partition_print_OBJECTS)
partition_print_LDADD = $(LDADD)
partition_print_DEPENDENCIES = ../libeskernel.a \
	../../libes++/libessup++.a $(am__DEPENDENCIES_1)
am_position_OBJECTS = position.$(OBJEXT)
position_OBJECTS = $(am_position_OBJECTS)
position_LDADD = $(LDADD)
position_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_process_OBJECTS = process.$(OBJEXT)
process_OBJECTS = $(am_process_OBJECTS)
process_LDADD = $(LDADD)
process_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_read_OBJECTS = read.$(OBJEXT)
read_OBJECTS = $(am_read_OBJECTS)
read_LDADD = $(LDADD)
read_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_replace_OBJECTS = replace.$(OBJEXT)
replace_OBJECTS = $(am_replace_OBJECTS)
replace_LDADD = $(LDADD)
replace_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_ring_OBJECTS = ring.$(OBJEXT)
ring_OBJECTS = $(am_ring_OBJECTS)
ring_LDADD = $(LDADD)
ring_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_sb16_OBJECTS = sb16.$(OBJEXT) wave.$(OBJEXT)
sb16_OBJECTS = $(am_sb16_OBJECTS)
sb16_LDADD = $(LDADD)
sb16_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_size_OBJECTS = size.$(OBJEXT)
size_OBJECTS = $(am_size_OBJECTS)
size_LDADD = $(LDADD)
size_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_thread_OBJECTS = thread.$(OBJEXT)
thread_OBJECTS = $(am_thread_OBJECTS)
thread_LDADD = $(LDADD)
thread_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_thread_cancel_OBJECTS = thread_cancel.$(OBJEXT)
thread_cancel_OBJECTS = $(am_thread_cancel_OBJECTS)
thread_cancel_LDADD = $(LDADD)
thread_cancel_DEPENDENCIES = ../libeskernel.a \
	../../libes++/libessup++.a $(am__DEPENDENCIES_1)
am_thread_smp_OBJECTS = thread_smp.$(OBJEXT)
thread_smp_OBJECTS = $(am_thread_smp_OBJECTS)
thread_smp_LDADD = $(LDADD)
thread_smp_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am__timer_SOURCES_DIST = timer.cpp
@POSIX_TRUE@am_timer_OBJECTS = timer.$(OBJEXT)
timer_OBJECTS = $(am_timer_OBJECTS)
timer_LDADD = $(LDADD)
timer_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_tsd_OBJECTS = tsd.$(OBJEXT)
tsd_OBJECTS = $(am_tsd_OBJECTS)
tsd_LDADD = $(LDADD)
tsd_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_utf_OBJECTS = utf.$(OBJEXT)
utf_OBJECTS = $(am_utf_OBJECTS)
utf_LDADD = $(LDADD)
utf_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_vesa_OBJECTS = vesa.$(OBJEXT)
vesa_OBJECTS = $(am_vesa_OBJECTS)
vesa_LDADD = $(LDADD)
vesa_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_write_OBJECTS = write.$(OBJEXT)
write_OBJECTS = $(am_write_OBJECTS)
write_LDADD = $(LDADD)
write_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_write_read_OBJECTS = write_read.$(OBJEXT)
write_read_OBJECTS = $(am_write_read_OBJECTS)
write_read_LDADD = $(LDADD)
write_read_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
am_write_read2_OBJECTS = write_read2.$(OBJEXT)
write_read2_OBJECTS = $(am_write_read2_OBJECTS)
write_read2_LDADD = $(LDADD)
write_read2_DEPENDENCIES = ../libeskernel.a ../../libes++/libessup++.a \
	$(am__DEPENDENCIES_1)
SCRIPTS = $(noinst_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(8042_SOURCES) $(ata_SOURCES) $(beep_SOURCES) \
	$(bpi_SOURCES) $(bpi2_SOURCES) $(bpi3_SOURCES) \
	$(cache_SOURCES) $(cdrom_SOURCES) $(context_SOURCES) \
	$(create_release_SOURCES) $(datetime_SOURCES) \
	$(es1370_SOURCES) $(ethernet_SOURCES) $(exception_SOURCES) \
	$(fdc_SOURCES) $(fdc_diskChange_SOURCES) $(fpu_SOURCES) \
	$(getPageCount_SOURCES) $(handle_SOURCES) $(heap_SOURCES) \
	$(interlocked_SOURCES) $(invalidate_SOURCES) \
	$(loopback_SOURCES) $(monitor0_SOURCES) $(monitor1_SOURCES) \
	$(monitor2_SOURCES) $(monitor3_SOURCES) $(page_SOURCES) \
	$(pageSet_SOURCES) $(partition_SOURCES) \
	$(partition_bind_SOURCES) $(partition_error_SOURCES) \
	$(partition_extended_SOURCES) $(partition_iterator_SOURCES) \
	$(partition_print_SOURCES) $(position_SOURCES) \
	$(process_SOURCES) $(read_SOURCES) $(replace_SOURCES) \
	$(ring_SOURCES) $(sb16_SOURCES) $(size_SOURCES) \
	$(thread_SOURCES) $(thread_cancel_SOURCES) \
	$(thread_smp_SOURCES) $(timer_SOURCES) $(tsd_SOURCES) \
	$(utf_SOURCES) $(vesa_SOURCES) $(write_SOURCES) \
	$(write_read_SOURCES) $(write_read2_SOURCES)
DIST_SOURCES = $(8042_SOURCES) $(ata_SOURCES) $(beep_SOURCES) \
	$(bpi_SOURCES) $(bpi2_SOURCES) $(bpi3_SOURCES) \
	$(cache_SOURCES) $(cdrom_SOURCES) $(context_SOURCES) \
	$(create_release_SOURCES) $(datetime_SOURCES) \
	$(es1370_SOURCES) $(ethernet_SOURCES) $(exception_SOURCES) \
	$(fdc_SOURCES) $(fdc_diskChange_SOURCES) $(fpu_SOURCES) \
	$(getPageCount_SOURCES) $(handle_SOURCES) $(heap_SOURCES) \
	$(interlocked_SOURCES) $(invalidate_SOURCES) \
	$(loopback_SOURCES) $(monitor0_SOURCES) $(monitor1_SOURCES) \
	$(monitor2_SOURCES) $(monitor3_SOURCES) $(page_SOURCES) \
	$(pageSet_SOURCES) $(partition_SOURCES) \
	$(partition_bind_SOURCES) $(partition_error_SOURCES) \
	$(partition_extended_SOURCES) $(partition_iterator_SOURCES) \
	$(partition_print_SOURCES) $(position_SOURCES) \
	$(process_SOURCES) $(read_SOURCES) $(replace_SOURCES) \
	$(ring_SOURCES) $(sb16_SOURCES) $(size_SOURCES) \
	$(thread_SOURCES) $(thread_cancel_SOURCES) \
	$(thread_smp_SOURCES) $(am__timer_SOURCES_DIST) $(tsd_SOURCES) \
	$(utf_SOURCES) $(vesa_SOURCES) $(write_SOURCES) \
	$(write_read_SOURCES) $(write_read2_SOURCES)
DATA = $(noinst_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
ES_FALSE = @ES_FALSE@
ES_TRUE = @ES_TRUE@
EXEEXT = @EXEEXT@
I386_FALSE = @I386_FALSE@
I386_TRUE = @I386_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POSIX_FALSE = @POSIX_FALSE@
POSIX_TRUE = @POSIX_TRUE@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WIN32_FALSE = @WIN32_FALSE@
WIN32_TRUE = @WIN32_TRUE@
X86_64_FALSE = @X86_64_FALSE@
X86_64_TRUE = @X86_64_TRUE@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
LDADD = ../libeskernel.a ../../libes++/libessup++.a $(am__append_2)
SUFFIXES = .img .gz .iso
AM_CPPFLAGS = -I $(srcdir)/../include -I- -I ../../../include -I \
	$(srcdir)/../../../include $(am__append_1) $(am__append_3)
@ES_TRUE@TESTS = handle interlocked exception utf ring fpu tsd \
@ES_TRUE@	context datetime thread thread_cancel thread_smp \
@ES_TRUE@	monitor0 monitor1 monitor2 monitor3 \
@ES_TRUE@	bpi bpi2 bpi3 \
@ES_TRUE@	ata beep 8042 vesa fdc fdc_diskChange sb16 es1370 cdrom \
@ES_TRUE@	page cache replace \
@ES_TRUE@	position size write_read write_read2 \
@ES_TRUE@	write read create_release getPageCount \
@ES_TRUE@	invalidate \
@ES_TRUE@	pageSet process \
@ES_TRUE@	loopback ethernet

@POSIX_TRUE@TESTS = handle interlocked exception utf ring \
@POSIX_TRUE@	heap page cache replace \
@POSIX_TRUE@	position size write_read write_read2 write read \
@POSIX_TRUE@	create_release getPageCount invalidate \
@POSIX_TRUE@	context datetime thread thread_cancel \
@POSIX_TRUE@	monitor0 monitor1 monitor2 monitor3 pageSet \
@POSIX_TRUE@	partition partition_error partition_extended partition_iterator \
@POSIX_TRUE@	partition_bind partition_print \
@POSIX_TRUE@	loopback ethernet timer

@ES_TRUE@noinst_DATA = fat16.img isotest.iso \
@ES_TRUE@	handle.img interlocked.img exception.img utf.img ring.img fpu.img tsd.img \
@ES_TRUE@	context.img datetime.img thread.img thread_cancel.img thread_smp.img \
@ES_TRUE@	monitor0.img monitor1.img monitor2.img monitor3.img \
@ES_TRUE@	bpi.img bpi2.img bpi3.img \
@ES_TRUE@	ata.img beep.img 8042.img vesa.img fdc.img \
@ES_TRUE@	fdc_diskChange.img sb16.img es1370.img cdrom.img \
@ES_TRUE@	page.img cache.img replace.img \
@ES_TRUE@	position.img size.img write_read.img write_read2.img \
@ES_TRUE@	write.img read.img create_release.img getPageCount.img \
@ES_TRUE@	invalidate.img \
@ES_TRUE@	pageSet.img process.img \
@ES_TRUE@	ethernet.img loopback.img

@POSIX_TRUE@noinst_DATA = fat16_32MB.img fat16.img
@ES_TRUE@noinst_SCRIPTS = $(TESTS)
@ES_TRUE@CLEANFILES = $(noinst_DATA) $(noinst_SCRIPTS)
@ES_TRUE@AM_LDFLAGS = -Wl,--section-start,".init"=0x81000000,-static,--omagic,--cref,-Map,$@.map
handle_SOURCES = handle.cpp
interlocked_SOURCES = interlocked.cpp
exception_SOURCES = exception.cpp
utf_SOURCES = utf.cpp
ring_SOURCES = ring.cpp
fpu_SOURCES = fpu.cpp
tsd_SOURCES = tsd.cpp
heap_SOURCES = heap.cpp
page_SOURCES = page.cpp
cache_SOURCES = cache.cpp memoryStream.h
ata_SOURCES = ata.cpp
beep_SOURCES = beep.cpp
8042_SOURCES = 8042.cpp
vesa_SOURCES = vesa.cpp
fdc_SOURCES = fdc.cpp
fdc_diskChange_SOURCES = fdc_diskChange.cpp
sb16_SOURCES = sb16.cpp wave.cpp
es1370_SOURCES = es1370.cpp wave.cpp
cdrom_SOURCES = cdrom.cpp
pageSet_SOURCES = pageSet.cpp  memoryStream.h
process_SOURCES = process.cpp
position_SOURCES = position.cpp memoryStream.h
size_SOURCES = size.cpp
write_read_SOURCES = write_read.cpp memoryStream.h
write_read2_SOURCES = write_read2.cpp memoryStream.h
write_SOURCES = write.cpp memoryStream.h
read_SOURCES = read.cpp memoryStream.h
create_release_SOURCES = create_release.cpp memoryStream.h
getPageCount_SOURCES = getPageCount.cpp memoryStream.h
invalidate_SOURCES = invalidate.cpp memoryStream.h
replace_SOURCES = replace.cpp memoryStream.h
context_SOURCES = context.cpp
datetime_SOURCES = datetime.cpp
thread_SOURCES = thread.cpp
thread_smp_SOURCES = thread_smp.cpp
thread_cancel_SOURCES = thread_cancel.cpp
monitor0_SOURCES = monitor0.cpp
monitor1_SOURCES = monitor1.cpp
monitor2_SOURCES = monitor2.cpp
monitor3_SOURCES = monitor3.cpp
bpi_SOURCES = bpi.cpp
bpi2_SOURCES = bpi2.cpp
bpi3_SOURCES = bpi3.cpp
partition_SOURCES = partition.cpp vdisk.h
partition_error_SOURCES = partition_error.cpp vdisk.h
partition_extended_SOURCES = partition_extended.cpp vdisk.h
partition_iterator_SOURCES = partition_iterator.cpp vdisk.h
partition_bind_SOURCES = partition_bind.cpp vdisk.h
partition_print_SOURCES = partition_print.cpp vdisk.h
ethernet_SOURCES = ethernet.cpp
loopback_SOURCES = loopback.cpp
@POSIX_TRUE@timer_SOURCES = timer.cpp
EXTRA_DIST = fat16_32MB.img.gz fat16.img.gz isotest.iso.gz makeScript
all: all-am

.SUFFIXES:
.SUFFIXES: .img .gz .iso .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kernel/testsuite/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kernel/testsuite/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
8042$(EXEEXT): $(8042_OBJECTS) $(8042_DEPENDENCIES) 
	@rm -f 8042$(EXEEXT)
	$(CXXLINK) $(8042_LDFLAGS) $(8042_OBJECTS) $(8042_LDADD) $(LIBS)
ata$(EXEEXT): $(ata_OBJECTS) $(ata_DEPENDENCIES) 
	@rm -f ata$(EXEEXT)
	$(CXXLINK) $(ata_LDFLAGS) $(ata_OBJECTS) $(ata_LDADD) $(LIBS)
beep$(EXEEXT): $(beep_OBJECTS) $(beep_DEPENDENCIES) 
	@rm -f beep$(EXEEXT)
	$(CXXLINK) $(beep_LDFLAGS) $(beep_OBJECTS) $(beep_LDADD) $(LIBS)
bpi$(EXEEXT): $(bpi_OBJECTS) $(bpi_DEPENDENCIES) 
	@rm -f bpi$(EXEEXT)
	$(CXXLINK) $(bpi_LDFLAGS) $(bpi_OBJECTS) $(bpi_LDADD) $(LIBS)
bpi2$(EXEEXT): $(bpi2_OBJECTS) $(bpi2_DEPENDENCIES) 
	@rm -f bpi2$(EXEEXT)
	$(CXXLINK) $(bpi2_LDFLAGS) $(bpi2_OBJECTS) $(bpi2_LDADD) $(LIBS)
bpi3$(EXEEXT): $(bpi3_OBJECTS) $(bpi3_DEPENDENCIES) 
	@rm -f bpi3$(EXEEXT)
	$(CXXLINK) $(bpi3_LDFLAGS) $(bpi3_OBJECTS) $(bpi3_LDADD) $(LIBS)
cache$(EXEEXT): $(cache_OBJECTS) $(cache_DEPENDENCIES) 
	@rm -f cache$(EXEEXT)
	$(CXXLINK) $(cache_LDFLAGS) $(cache_OBJECTS) $(cache_LDADD) $(LIBS)
cdrom$(EXEEXT): $(cdrom_OBJECTS) $(cdrom_DEPENDENCIES) 
	@rm -f cdrom$(EXEEXT)
	$(CXXLINK) $(cdrom_LDFLAGS) $(cdrom_OBJECTS) $(cdrom_LDADD) $(LIBS)
context$(EXEEXT): $(context_OBJECTS) $(context_DEPENDENCIES) 
	@rm -f context$(EXEEXT)
	$(CXXLINK) $(context_LDFLAGS) $(context_OBJECTS) $(context_LDADD) $(LIBS)
create_release$(EXEEXT): $(create_release_OBJECTS) $(create_release_DEPENDENCIES) 
	@rm -f create_release$(EXEEXT)
	$(CXXLINK) $(create_release_LDFLAGS) $(create_release_OBJECTS) $(create_release_LDADD) $(LIBS)
datetime$(EXEEXT): $(datetime_OBJECTS) $(datetime_DEPENDENCIES) 
	@rm -f datetime$(EXEEXT)
	$(CXXLINK) $(datetime_LDFLAGS) $(datetime_OBJECTS) $(datetime_LDADD) $(LIBS)
es1370$(EXEEXT): $(es1370_OBJECTS) $(es1370_DEPENDENCIES) 
	@rm -f es1370$(EXEEXT)
	$(CXXLINK) $(es1370_LDFLAGS) $(es1370_OBJECTS) $(es1370_LDADD) $(LIBS)
ethernet$(EXEEXT): $(ethernet_OBJECTS) $(ethernet_DEPENDENCIES) 
	@rm -f ethernet$(EXEEXT)
	$(CXXLINK) $(ethernet_LDFLAGS) $(ethernet_OBJECTS) $(ethernet_LDADD) $(LIBS)
exception$(EXEEXT): $(exception_OBJECTS) $(exception_DEPENDENCIES) 
	@rm -f exception$(EXEEXT)
	$(CXXLINK) $(exception_LDFLAGS) $(exception_OBJECTS) $(exception_LDADD) $(LIBS)
fdc$(EXEEXT): $(fdc_OBJECTS) $(fdc_DEPENDENCIES) 
	@rm -f fdc$(EXEEXT)
	$(CXXLINK) $(fdc_LDFLAGS) $(fdc_OBJECTS) $(fdc_LDADD) $(LIBS)
fdc_diskChange$(EXEEXT): $(fdc_diskChange_OBJECTS) $(fdc_diskChange_DEPENDENCIES) 
	@rm -f fdc_diskChange$(EXEEXT)
	$(CXXLINK) $(fdc_diskChange_LDFLAGS) $(fdc_diskChange_OBJECTS) $(fdc_diskChange_LDADD) $(LIBS)
fpu$(EXEEXT): $(fpu_OBJECTS) $(fpu_DEPENDENCIES) 
	@rm -f fpu$(EXEEXT)
	$(CXXLINK) $(fpu_LDFLAGS) $(fpu_OBJECTS) $(fpu_LDADD) $(LIBS)
getPageCount$(EXEEXT): $(getPageCount_OBJECTS) $(getPageCount_DEPENDENCIES) 
	@rm -f getPageCount$(EXEEXT)
	$(CXXLINK) $(getPageCount_LDFLAGS) $(getPageCount_OBJECTS) $(getPageCount_LDADD) $(LIBS)
handle$(EXEEXT): $(handle_OBJECTS) $(handle_DEPENDENCIES) 
	@rm -f handle$(EXEEXT)
	$(CXXLINK) $(handle_LDFLAGS) $(handle_OBJECTS) $(handle_LDADD) $(LIBS)
heap$(EXEEXT): $(heap_OBJECTS) $(heap_DEPENDENCIES) 
	@rm -f heap$(EXEEXT)
	$(CXXLINK) $(heap_LDFLAGS) $(heap_OBJECTS) $(heap_LDADD) $(LIBS)
interlocked$(EXEEXT): $(interlocked_OBJECTS) $(interlocked_DEPENDENCIES) 
	@rm -f interlocked$(EXEEXT)
	$(CXXLINK) $(interlocked_LDFLAGS) $(interlocked_OBJECTS) $(interlocked_LDADD) $(LIBS)
invalidate$(EXEEXT): $(invalidate_OBJECTS) $(invalidate_DEPENDENCIES) 
	@rm -f invalidate$(EXEEXT)
	$(CXXLINK) $(invalidate_LDFLAGS) $(invalidate_OBJECTS) $(invalidate_LDADD) $(LIBS)
loopback$(EXEEXT): $(loopback_OBJECTS) $(loopback_DEPENDENCIES) 
	@rm -f loopback$(EXEEXT)
	$(CXXLINK) $(loopback_LDFLAGS) $(loopback_OBJECTS) $(loopback_LDADD) $(LIBS)
monitor0$(EXEEXT): $(monitor0_OBJECTS) $(monitor0_DEPENDENCIES) 
	@rm -f monitor0$(EXEEXT)
	$(CXXLINK) $(monitor0_LDFLAGS) $(monitor0_OBJECTS) $(monitor0_LDADD) $(LIBS)
monitor1$(EXEEXT): $(monitor1_OBJECTS) $(monitor1_DEPENDENCIES) 
	@rm -f monitor1$(EXEEXT)
	$(CXXLINK) $(monitor1_LDFLAGS) $(monitor1_OBJECTS) $(monitor1_LDADD) $(LIBS)
monitor2$(EXEEXT): $(monitor2_OBJECTS) $(monitor2_DEPENDENCIES) 
	@rm -f monitor2$(EXEEXT)
	$(CXXLINK) $(monitor2_LDFLAGS) $(monitor2_OBJECTS) $(monitor2_LDADD) $(LIBS)
monitor3$(EXEEXT): $(monitor3_OBJECTS) $(monitor3_DEPENDENCIES) 
	@rm -f monitor3$(EXEEXT)
	$(CXXLINK) $(monitor3_LDFLAGS) $(monitor3_OBJECTS) $(monitor3_LDADD) $(LIBS)
page$(EXEEXT): $(page_OBJECTS) $(page_DEPENDENCIES) 
	@rm -f page$(EXEEXT)
	$(CXXLINK) $(page_LDFLAGS) $(page_OBJECTS) $(page_LDADD) $(LIBS)
pageSet$(EXEEXT): $(pageSet_OBJECTS) $(pageSet_DEPENDENCIES) 
	@rm -f pageSet$(EXEEXT)
	$(CXXLINK) $(pageSet_LDFLAGS) $(pageSet_OBJECTS) $(pageSet_LDADD) $(LIBS)
partition$(EXEEXT): $(partition_OBJECTS) $(partition_DEPENDENCIES) 
	@rm -f partition$(EXEEXT)
	$(CXXLINK) $(partition_LDFLAGS) $(partition_OBJECTS) $(partition_LDADD) $(LIBS)
partition_bind$(EXEEXT): $(partition_bind_OBJECTS) $(partition_bind_DEPENDENCIES) 
	@rm -f partition_bind$(EXEEXT)
	$(CXXLINK) $(partition_bind_LDFLAGS) $(partition_bind_OBJECTS) $(partition_bind_LDADD) $(LIBS)
partition_error$(EXEEXT): $(partition_error_OBJECTS) $(partition_error_DEPENDENCIES) 
	@rm -f partition_error$(EXEEXT)
	$(CXXLINK) $(partition_error_LDFLAGS) $(partition_error_OBJECTS) $(partition_error_LDADD) $(LIBS)
partition_extended$(EXEEXT): $(partition_extended_OBJECTS) $(partition_extended_DEPENDENCIES) 
	@rm -f partition_extended$(EXEEXT)
	$(CXXLINK) $(partition_extended_LDFLAGS) $(partition_extended_OBJECTS) $(partition_extended_LDADD) $(LIBS)
partition_iterator$(EXEEXT): $(partition_iterator_OBJECTS) $(partition_iterator_DEPENDENCIES) 
	@rm -f partition_iterator$(EXEEXT)
	$(CXXLINK) $(partition_iterator_LDFLAGS) $(partition_iterator_OBJECTS) $(partition_iterator_LDADD) $(LIBS)
partition_print$(EXEEXT): $(partition_print_OBJECTS) $(partition_print_DEPENDENCIES) 
	@rm -f partition_print$(EXEEXT)
	$(CXXLINK) $(partition_print_LDFLAGS) $(partition_print_OBJECTS) $(partition_print_LDADD) $(LIBS)
position$(EXEEXT): $(position_OBJECTS) $(position_DEPENDENCIES) 
	@rm -f position$(EXEEXT)
	$(CXXLINK) $(position_LDFLAGS) $(position_OBJECTS) $(position_LDADD) $(LIBS)
process$(EXEEXT): $(process_OBJECTS) $(process_DEPENDENCIES) 
	@rm -f process$(EXEEXT)
	$(CXXLINK) $(process_LDFLAGS) $(process_OBJECTS) $(process_LDADD) $(LIBS)
read$(EXEEXT): $(read_OBJECTS) $(read_DEPENDENCIES) 
	@rm -f read$(EXEEXT)
	$(CXXLINK) $(read_LDFLAGS) $(read_OBJECTS) $(read_LDADD) $(LIBS)
replace$(EXEEXT): $(replace_OBJECTS) $(replace_DEPENDENCIES) 
	@rm -f replace$(EXEEXT)
	$(CXXLINK) $(replace_LDFLAGS) $(replace_OBJECTS) $(replace_LDADD) $(LIBS)
ring$(EXEEXT): $(ring_OBJECTS) $(ring_DEPENDENCIES) 
	@rm -f ring$(EXEEXT)
	$(CXXLINK) $(ring_LDFLAGS) $(ring_OBJECTS) $(ring_LDADD) $(LIBS)
sb16$(EXEEXT): $(sb16_OBJECTS) $(sb16_DEPENDENCIES) 
	@rm -f sb16$(EXEEXT)
	$(CXXLINK) $(sb16_LDFLAGS) $(sb16_OBJECTS) $(sb16_LDADD) $(LIBS)
size$(EXEEXT): $(size_OBJECTS) $(size_DEPENDENCIES) 
	@rm -f size$(EXEEXT)
	$(CXXLINK) $(size_LDFLAGS) $(size_OBJECTS) $(size_LDADD) $(LIBS)
thread$(EXEEXT): $(thread_OBJECTS) $(thread_DEPENDENCIES) 
	@rm -f thread$(EXEEXT)
	$(CXXLINK) $(thread_LDFLAGS) $(thread_OBJECTS) $(thread_LDADD) $(LIBS)
thread_cancel$(EXEEXT): $(thread_cancel_OBJECTS) $(thread_cancel_DEPENDENCIES) 
	@rm -f thread_cancel$(EXEEXT)
	$(CXXLINK) $(thread_cancel_LDFLAGS) $(thread_cancel_OBJECTS) $(thread_cancel_LDADD) $(LIBS)
thread_smp$(EXEEXT): $(thread_smp_OBJECTS) $(thread_smp_DEPENDENCIES) 
	@rm -f thread_smp$(EXEEXT)
	$(CXXLINK) $(thread_smp_LDFLAGS) $(thread_smp_OBJECTS) $(thread_smp_LDADD) $(LIBS)
timer$(EXEEXT): $(timer_OBJECTS) $(timer_DEPENDENCIES) 
	@rm -f timer$(EXEEXT)
	$(CXXLINK) $(timer_LDFLAGS) $(timer_OBJECTS) $(timer_LDADD) $(LIBS)
tsd$(EXEEXT): $(tsd_OBJECTS) $(tsd_DEPENDENCIES) 
	@rm -f tsd$(EXEEXT)
	$(CXXLINK) $(tsd_LDFLAGS) $(tsd_OBJECTS) $(tsd_LDADD) $(LIBS)
utf$(EXEEXT): $(utf_OBJECTS) $(utf_DEPENDENCIES) 
	@rm -f utf$(EXEEXT)
	$(CXXLINK) $(utf_LDFLAGS) $(utf_OBJECTS) $(utf_LDADD) $(LIBS)
vesa$(EXEEXT): $(vesa_OBJECTS) $(vesa_DEPENDENCIES) 
	@rm -f vesa$(EXEEXT)
	$(CXXLINK) $(vesa_LDFLAGS) $(vesa_OBJECTS) $(vesa_LDADD) $(LIBS)
write$(EXEEXT): $(write_OBJECTS) $(write_DEPENDENCIES) 
	@rm -f write$(EXEEXT)
	$(CXXLINK) $(write_LDFLAGS) $(write_OBJECTS) $(write_LDADD) $(LIBS)
write_read$(EXEEXT): $(write_read_OBJECTS) $(write_read_DEPENDENCIES) 
	@rm -f write_read$(EXEEXT)
	$(CXXLINK) $(write_read_LDFLAGS) $(write_read_OBJECTS) $(write_read_LDADD) $(LIBS)
write_read2$(EXEEXT): $(write_read2_OBJECTS) $(write_read2_DEPENDENCIES) 
	@rm -f write_read2$(EXEEXT)
	$(CXXLINK) $(write_read2_LDFLAGS) $(write_read2_OBJECTS) $(write_read2_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/8042.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ata.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bpi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bpi2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bpi3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cdrom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/context.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create_release.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/datetime.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/es1370.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ethernet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exception.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fdc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fdc_diskChange.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fpu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getPageCount.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/handle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/heap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interlocked.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/invalidate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loopback.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/monitor0.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/monitor1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/monitor2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/monitor3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/page.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pageSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/partition.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/partition_bind.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/partition_error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/partition_extended.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/partition_iterator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/partition_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/position.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/process.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/read.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/replace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ring.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sb16.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/size.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_cancel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_smp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vesa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wave.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/write.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/write_read.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/write_read2.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(DATA)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
@ES_FALSE@clean-local:
clean: clean-am

clean-am: clean-generic clean-local clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-generic clean-local clean-noinstPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am


%.img : %.elf
	$(host_alias)-objcopy -O binary $< $@

% :: %.elf
	$(srcdir)/makeScript "`pwd`" $@

@ES_TRUE@clean-local:
@ES_TRUE@	-rm -f *.map *.log 2hd.img es.img

fat16_32MB.img: fat16_32MB.img.gz
	gunzip -c $< > $@

fat16.img: fat16.img.gz
	gunzip -c $< > $@

isotest.iso: isotest.iso.gz
	gunzip -c $< > $@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
