SUBDIRS = . testsuite

lib_LIBRARIES = libeskernel.a

SUFFIXES = .ird .c .bin
vpath %.ird = ../../include/es

%.c : %.ird
	mkdir -p $(*D);
	echo -n "unsigned char" $(*F) > $@;
	echo "Info[] = {" >> $@;
	od -A n -t x1 -v -w8 $< | sed -e 's/^ */0x/' -e 's/ /, 0x/g' -e 's/$$/,/' >> $@;
	echo "};" >> $@

vpath %.bin = ../bootsect

.bin.c:
	echo "unsigned char" $(*F) "[] = {" > $@;
	od -A n -t x1 -v -w8 $< | sed -e 's/^ */0x/' -e 's/ /, 0x/g' -e 's/$$/,/' >> $@;
	echo "};" >> $@

AM_CPPFLAGS = \
	-I../../include \
	-I$(srcdir)/../../include \
	-iquote $(srcdir)/include

#
# default interface information
#
nodist_libeskernel_a_SOURCES = \
	base/IAlarm.c \
	base/ICache.c \
	base/ICallback.c \
	base/IClassFactory.c \
	base/IClassStore.c \
	base/IFile.c \
	base/IInterface.c \
	base/IInterfaceStore.c \
	base/IMonitor.c \
	base/IPageable.c \
	base/IPageSet.c \
	base/IProcess.c \
	base/IRuntime.c \
	base/IStream.c \
	base/IThread.c \
	device/IAudioFormat.c \
	device/IBeep.c \
	device/ICursor.c \
	device/IDevice.c \
	device/IDiskManagement.c \
	device/IDmac.c \
	device/IFileSystem.c \
	device/IPic.c \
	device/IRemovableMedia.c \
	device/IRtc.c \
	device/IPartition.c \
	device/IEthernet.c \
	naming/IBinding.c \
	naming/IContext.c \
	util/IIterator.c \
	util/ISet.c

#
# port
#

c_source_files =

cpp_source_files = \
	port/classStore.cpp \
	port/context.cpp \
	port/elf.cpp \
	port/init.cpp \
	port/interface.cpp

# memory management
cpp_source_files += \
	port/arena.cpp \
	port/cache.cpp \
	port/cacheFactory.cpp \
	port/heap.cpp \
	port/line.cpp \
	port/loopback.cpp \
	port/page.cpp \
	port/pageSet.cpp \
	port/pageTable.cpp \
	port/stream.cpp \
	port/zero.cpp

# The filenames of the header files not intalled but used by the kernel
header_files = \
	include/alarm.h \
	include/arena.h \
	include/cache.h \
	include/classStore.h \
	include/context.h \
	include/elfFile.h \
	include/heap.h \
	include/interfaceStore.h \
	include/line.h \
	include/loopback.h \
	include/partition.h \
	include/process.h \
	include/spinlock.h \
	include/thread.h \
	include/zero.h

# extra source files
cpp_source_files += \
	port/alarm.cpp \
	port/partitionContext.cpp \
	port/partitionStream.cpp \
	port/partitionIterator.cpp

# 	port/zero.cpp

# extra header files
header_files += \
	include/ata.h \
	include/uart.h

# 	include/space.h 

nodist_libeskernel_a_SOURCES += mbr.c

#
# pc
#

if ES

if I386
AM_CPPFLAGS += -iquote $(srcdir)/include/i386 -fnon-call-exceptions
endif I386

cpp_source_files += \
	port/lock.cpp \
	port/malloc.cpp \
	port/map.cpp \
	port/mmu.cpp \
	port/monitor.cpp \
	port/process.cpp \
	port/rendezvous.cpp \
	port/sched.cpp \
	port/spinlock.cpp \
	port/swap.cpp \
	port/syscall.cpp \
	port/thread.cpp \
	port/upcall.cpp

# c_source_files += \
#	pc/i386-stub.c

cpp_source_files += \
	pc/8042.cpp \
	pc/8237a.cpp \
	pc/8254.cpp \
	pc/8259.cpp \
	pc/apic.cpp \
	pc/ataController.cpp \
	pc/ataDevice.cpp \
	pc/ataPacket.cpp \
	pc/cga.cpp \
	pc/fdc.cpp \
	pc/fdd.cpp \
	pc/mps.cpp \
	pc/pc_core.cpp \
	pc/pc_dateTime.cpp \
	pc/pc_init.cpp \
	pc/pc_thread.cpp \
	pc/rtc.cpp \
	pc/sb16.cpp \
	pc/uart.cpp \
	pc/vesa.cpp \
	pc/xreg.cpp \
	pc/dp8390d.cpp

# cpp_source_files += \
#	pc/acpios.cpp
#	pc/dc21140.cpp
#	pc/elfloader.cpp
#	pc/pci.cpp

s_source_files = \
	pc/label.S

header_files += \
	include/i386/8042.h \
	include/i386/8237a.h \
	include/i386/8254.h \
	include/i386/8259.h \
	include/i386/apic.h \
	include/i386/ataController.h \
	include/i386/cga.h \
	include/i386/core.h \
	include/i386/cpu.h \
	include/i386/fdc.h \
	include/i386/io.h \
	include/i386/label.h \
	include/i386/mps.h \
	include/i386/rtc.h \
	include/i386/sb16.h \
	include/i386/vesa.h \
	include/i386/dp8390d.h

# header_files += \
#	pc/dc21140.h
#	pc/elfloader.h
#	pc/pci.h

endif ES

#
# windows
#

if WIN32

cpp_source_files += \
	windows/ref.cpp

endif WIN32

#
# posix
#

if POSIX

cpp_source_files += \
	posix/posix_thread.cpp \
	posix/posix_monitor.cpp \
	posix/posix_core.cpp \
	posix/posix_dateTime.cpp \
	posix/posix_init.cpp \
	posix/posix_ethernet.cpp

header_files += \
	include/posix/core.h \
	include/posix/tap.h

endif POSIX

libeskernel_a_SOURCES = $(s_source_files) $(c_source_files) $(cpp_source_files) $(header_files)

clean-local:
	-rm -rf base device naming util

if POSIX
AM_CPPFLAGS += -iquote $(srcdir)/include/posix
endif POSIX
