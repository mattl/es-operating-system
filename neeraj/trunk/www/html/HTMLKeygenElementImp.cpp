// Generated by esidl (r1745).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "HTMLKeygenElementImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

bool HTMLKeygenElementImp::getAutofocus()
{
    // TODO: implement me!
    return 0;
}

void HTMLKeygenElementImp::setAutofocus(bool autofocus)
{
    // TODO: implement me!
}

std::u16string HTMLKeygenElementImp::getChallenge()
{
    // TODO: implement me!
    return u"";
}

void HTMLKeygenElementImp::setChallenge(std::u16string challenge)
{
    // TODO: implement me!
}

bool HTMLKeygenElementImp::getDisabled()
{
    // TODO: implement me!
    return 0;
}

void HTMLKeygenElementImp::setDisabled(bool disabled)
{
    // TODO: implement me!
}

html::HTMLFormElement HTMLKeygenElementImp::getForm()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

std::u16string HTMLKeygenElementImp::getKeytype()
{
    // TODO: implement me!
    return u"";
}

void HTMLKeygenElementImp::setKeytype(std::u16string keytype)
{
    // TODO: implement me!
}

std::u16string HTMLKeygenElementImp::getName()
{
    // TODO: implement me!
    return u"";
}

void HTMLKeygenElementImp::setName(std::u16string name)
{
    // TODO: implement me!
}

std::u16string HTMLKeygenElementImp::getType()
{
    // TODO: implement me!
    return u"";
}

bool HTMLKeygenElementImp::getWillValidate()
{
    // TODO: implement me!
    return 0;
}

html::ValidityState HTMLKeygenElementImp::getValidity()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

std::u16string HTMLKeygenElementImp::getValidationMessage()
{
    // TODO: implement me!
    return u"";
}

bool HTMLKeygenElementImp::checkValidity()
{
    // TODO: implement me!
    return 0;
}

void HTMLKeygenElementImp::setCustomValidity(std::u16string error)
{
    // TODO: implement me!
}

NodeList HTMLKeygenElementImp::getLabels()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

}
}
}
}
