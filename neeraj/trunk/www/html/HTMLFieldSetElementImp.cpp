// Generated by esidl (r1745).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "HTMLFieldSetElementImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

bool HTMLFieldSetElementImp::getDisabled()
{
    // TODO: implement me!
    return 0;
}

void HTMLFieldSetElementImp::setDisabled(bool disabled)
{
    // TODO: implement me!
}

html::HTMLFormElement HTMLFieldSetElementImp::getForm()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

std::u16string HTMLFieldSetElementImp::getName()
{
    // TODO: implement me!
    return u"";
}

void HTMLFieldSetElementImp::setName(std::u16string name)
{
    // TODO: implement me!
}

std::u16string HTMLFieldSetElementImp::getType()
{
    // TODO: implement me!
    return u"";
}

html::HTMLFormControlsCollection HTMLFieldSetElementImp::getElements()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

bool HTMLFieldSetElementImp::getWillValidate()
{
    // TODO: implement me!
    return 0;
}

html::ValidityState HTMLFieldSetElementImp::getValidity()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

std::u16string HTMLFieldSetElementImp::getValidationMessage()
{
    // TODO: implement me!
    return u"";
}

bool HTMLFieldSetElementImp::checkValidity()
{
    // TODO: implement me!
    return 0;
}

void HTMLFieldSetElementImp::setCustomValidity(std::u16string error)
{
    // TODO: implement me!
}

}
}
}
}
