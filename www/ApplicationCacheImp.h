// Generated by esidl (r1745).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_APPLICATIONCACHEIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_APPLICATIONCACHEIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/html/ApplicationCache.h>
#include "EventTargetImp.h"

#include <org/w3c/dom/events/EventTarget.h>
#include <org/w3c/dom/html/Function.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class ApplicationCacheImp : public ObjectMixin<ApplicationCacheImp, EventTargetImp>
{
public:
    // ApplicationCache
    unsigned short getStatus() __attribute__((weak));
    void update() __attribute__((weak));
    void swapCache() __attribute__((weak));
    html::Function getOnchecking() __attribute__((weak));
    void setOnchecking(html::Function onchecking) __attribute__((weak));
    html::Function getOnerror() __attribute__((weak));
    void setOnerror(html::Function onerror) __attribute__((weak));
    html::Function getOnnoupdate() __attribute__((weak));
    void setOnnoupdate(html::Function onnoupdate) __attribute__((weak));
    html::Function getOndownloading() __attribute__((weak));
    void setOndownloading(html::Function ondownloading) __attribute__((weak));
    html::Function getOnprogress() __attribute__((weak));
    void setOnprogress(html::Function onprogress) __attribute__((weak));
    html::Function getOnupdateready() __attribute__((weak));
    void setOnupdateready(html::Function onupdateready) __attribute__((weak));
    html::Function getOncached() __attribute__((weak));
    void setOncached(html::Function oncached) __attribute__((weak));
    html::Function getOnobsolete() __attribute__((weak));
    void setOnobsolete(html::Function onobsolete) __attribute__((weak));
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return html::ApplicationCache::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return html::ApplicationCache::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_APPLICATIONCACHEIMP_H_INCLUDED
