// Generated by esidl (r1745).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_WHEELEVENTIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_WHEELEVENTIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/events/WheelEvent.h>
#include "MouseEventImp.h"

#include <org/w3c/dom/events/MouseEvent.h>
#include <org/w3c/dom/events/EventTarget.h>
#include <org/w3c/dom/html/Window.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class WheelEventImp : public ObjectMixin<WheelEventImp, MouseEventImp>
{
public:
    // WheelEvent
    int getDeltaX();
    int getDeltaY();
    int getDeltaZ();
    unsigned int getDeltaMode();
    void initWheelEvent(std::u16string typeArg, bool canBubbleArg, bool cancelableArg, html::Window viewArg, int detailArg, int screenXArg, int screenYArg, int clientXArg, int clientYArg, unsigned short buttonArg, events::EventTarget relatedTargetArg, std::u16string modifiersListArg, int deltaXArg, int deltaYArg, int deltaZArg, unsigned int deltaMode);
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return events::WheelEvent::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return events::WheelEvent::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_WHEELEVENTIMP_H_INCLUDED
