// Generated by esidl (r1745).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "SelectionImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

Node SelectionImp::getAnchorNode()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

int SelectionImp::getAnchorOffset()
{
    // TODO: implement me!
    return 0;
}

Node SelectionImp::getFocusNode()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

int SelectionImp::getFocusOffset()
{
    // TODO: implement me!
    return 0;
}

bool SelectionImp::getIsCollapsed()
{
    // TODO: implement me!
    return 0;
}

void SelectionImp::collapse(Node parentNode, int offset)
{
    // TODO: implement me!
}

void SelectionImp::collapseToStart()
{
    // TODO: implement me!
}

void SelectionImp::collapseToEnd()
{
    // TODO: implement me!
}

void SelectionImp::selectAllChildren(Node parentNode)
{
    // TODO: implement me!
}

void SelectionImp::deleteFromDocument()
{
    // TODO: implement me!
}

int SelectionImp::getRangeCount()
{
    // TODO: implement me!
    return 0;
}

ranges::Range SelectionImp::getRangeAt(int index)
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void SelectionImp::addRange(ranges::Range range)
{
    // TODO: implement me!
}

void SelectionImp::removeRange(ranges::Range range)
{
    // TODO: implement me!
}

void SelectionImp::removeAllRanges()
{
    // TODO: implement me!
}

std::u16string SelectionImp::toString()
{
    // TODO: implement me!
    return u"";
}

}
}
}
}
