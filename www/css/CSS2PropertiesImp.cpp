// Generated by esidl (r1745).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "CSS2PropertiesImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

Nullable<std::u16string> CSS2PropertiesImp::getAzimuth()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setAzimuth(Nullable<std::u16string> azimuth)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBackground()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBackground(Nullable<std::u16string> background)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBackgroundAttachment()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBackgroundAttachment(Nullable<std::u16string> backgroundAttachment)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBackgroundColor()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBackgroundColor(Nullable<std::u16string> backgroundColor)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBackgroundImage()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBackgroundImage(Nullable<std::u16string> backgroundImage)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBackgroundPosition()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBackgroundPosition(Nullable<std::u16string> backgroundPosition)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBackgroundRepeat()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBackgroundRepeat(Nullable<std::u16string> backgroundRepeat)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorder()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorder(Nullable<std::u16string> border)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderCollapse()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderCollapse(Nullable<std::u16string> borderCollapse)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderColor()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderColor(Nullable<std::u16string> borderColor)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderSpacing()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderSpacing(Nullable<std::u16string> borderSpacing)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderStyle()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderStyle(Nullable<std::u16string> borderStyle)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderTop()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderTop(Nullable<std::u16string> borderTop)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderRight()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderRight(Nullable<std::u16string> borderRight)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderBottom()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderBottom(Nullable<std::u16string> borderBottom)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderLeft()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderLeft(Nullable<std::u16string> borderLeft)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderTopColor()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderTopColor(Nullable<std::u16string> borderTopColor)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderRightColor()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderRightColor(Nullable<std::u16string> borderRightColor)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderBottomColor()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderBottomColor(Nullable<std::u16string> borderBottomColor)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderLeftColor()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderLeftColor(Nullable<std::u16string> borderLeftColor)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderTopStyle()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderTopStyle(Nullable<std::u16string> borderTopStyle)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderRightStyle()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderRightStyle(Nullable<std::u16string> borderRightStyle)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderBottomStyle()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderBottomStyle(Nullable<std::u16string> borderBottomStyle)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderLeftStyle()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderLeftStyle(Nullable<std::u16string> borderLeftStyle)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderTopWidth()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderTopWidth(Nullable<std::u16string> borderTopWidth)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderRightWidth()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderRightWidth(Nullable<std::u16string> borderRightWidth)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderBottomWidth()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderBottomWidth(Nullable<std::u16string> borderBottomWidth)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderLeftWidth()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderLeftWidth(Nullable<std::u16string> borderLeftWidth)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBorderWidth()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBorderWidth(Nullable<std::u16string> borderWidth)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getBottom()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setBottom(Nullable<std::u16string> bottom)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getCaptionSide()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setCaptionSide(Nullable<std::u16string> captionSide)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getClear()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setClear(Nullable<std::u16string> clear)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getClip()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setClip(Nullable<std::u16string> clip)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getColor()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setColor(Nullable<std::u16string> color)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getContent()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setContent(Nullable<std::u16string> content)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getCounterIncrement()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setCounterIncrement(Nullable<std::u16string> counterIncrement)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getCounterReset()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setCounterReset(Nullable<std::u16string> counterReset)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getCue()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setCue(Nullable<std::u16string> cue)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getCueAfter()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setCueAfter(Nullable<std::u16string> cueAfter)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getCueBefore()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setCueBefore(Nullable<std::u16string> cueBefore)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getCursor()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setCursor(Nullable<std::u16string> cursor)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getDirection()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setDirection(Nullable<std::u16string> direction)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getDisplay()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setDisplay(Nullable<std::u16string> display)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getElevation()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setElevation(Nullable<std::u16string> elevation)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getEmptyCells()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setEmptyCells(Nullable<std::u16string> emptyCells)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getCssFloat()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setCssFloat(Nullable<std::u16string> cssFloat)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getFont()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setFont(Nullable<std::u16string> font)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getFontFamily()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setFontFamily(Nullable<std::u16string> fontFamily)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getFontSize()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setFontSize(Nullable<std::u16string> fontSize)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getFontSizeAdjust()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setFontSizeAdjust(Nullable<std::u16string> fontSizeAdjust)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getFontStretch()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setFontStretch(Nullable<std::u16string> fontStretch)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getFontStyle()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setFontStyle(Nullable<std::u16string> fontStyle)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getFontVariant()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setFontVariant(Nullable<std::u16string> fontVariant)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getFontWeight()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setFontWeight(Nullable<std::u16string> fontWeight)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getHeight()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setHeight(Nullable<std::u16string> height)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getLeft()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setLeft(Nullable<std::u16string> left)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getLetterSpacing()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setLetterSpacing(Nullable<std::u16string> letterSpacing)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getLineHeight()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setLineHeight(Nullable<std::u16string> lineHeight)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getListStyle()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setListStyle(Nullable<std::u16string> listStyle)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getListStyleImage()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setListStyleImage(Nullable<std::u16string> listStyleImage)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getListStylePosition()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setListStylePosition(Nullable<std::u16string> listStylePosition)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getListStyleType()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setListStyleType(Nullable<std::u16string> listStyleType)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getMargin()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setMargin(Nullable<std::u16string> margin)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getMarginTop()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setMarginTop(Nullable<std::u16string> marginTop)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getMarginRight()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setMarginRight(Nullable<std::u16string> marginRight)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getMarginBottom()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setMarginBottom(Nullable<std::u16string> marginBottom)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getMarginLeft()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setMarginLeft(Nullable<std::u16string> marginLeft)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getMarkerOffset()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setMarkerOffset(Nullable<std::u16string> markerOffset)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getMarks()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setMarks(Nullable<std::u16string> marks)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getMaxHeight()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setMaxHeight(Nullable<std::u16string> maxHeight)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getMaxWidth()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setMaxWidth(Nullable<std::u16string> maxWidth)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getMinHeight()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setMinHeight(Nullable<std::u16string> minHeight)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getMinWidth()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setMinWidth(Nullable<std::u16string> minWidth)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getOrphans()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setOrphans(Nullable<std::u16string> orphans)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getOutline()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setOutline(Nullable<std::u16string> outline)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getOutlineColor()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setOutlineColor(Nullable<std::u16string> outlineColor)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getOutlineStyle()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setOutlineStyle(Nullable<std::u16string> outlineStyle)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getOutlineWidth()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setOutlineWidth(Nullable<std::u16string> outlineWidth)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getOverflow()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setOverflow(Nullable<std::u16string> overflow)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getPadding()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setPadding(Nullable<std::u16string> padding)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getPaddingTop()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setPaddingTop(Nullable<std::u16string> paddingTop)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getPaddingRight()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setPaddingRight(Nullable<std::u16string> paddingRight)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getPaddingBottom()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setPaddingBottom(Nullable<std::u16string> paddingBottom)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getPaddingLeft()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setPaddingLeft(Nullable<std::u16string> paddingLeft)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getPage()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setPage(Nullable<std::u16string> page)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getPageBreakAfter()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setPageBreakAfter(Nullable<std::u16string> pageBreakAfter)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getPageBreakBefore()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setPageBreakBefore(Nullable<std::u16string> pageBreakBefore)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getPageBreakInside()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setPageBreakInside(Nullable<std::u16string> pageBreakInside)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getPause()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setPause(Nullable<std::u16string> pause)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getPauseAfter()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setPauseAfter(Nullable<std::u16string> pauseAfter)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getPauseBefore()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setPauseBefore(Nullable<std::u16string> pauseBefore)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getPitch()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setPitch(Nullable<std::u16string> pitch)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getPitchRange()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setPitchRange(Nullable<std::u16string> pitchRange)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getPlayDuring()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setPlayDuring(Nullable<std::u16string> playDuring)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getPosition()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setPosition(Nullable<std::u16string> position)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getQuotes()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setQuotes(Nullable<std::u16string> quotes)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getRichness()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setRichness(Nullable<std::u16string> richness)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getRight()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setRight(Nullable<std::u16string> right)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getSize()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setSize(Nullable<std::u16string> size)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getSpeak()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setSpeak(Nullable<std::u16string> speak)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getSpeakHeader()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setSpeakHeader(Nullable<std::u16string> speakHeader)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getSpeakNumeral()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setSpeakNumeral(Nullable<std::u16string> speakNumeral)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getSpeakPunctuation()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setSpeakPunctuation(Nullable<std::u16string> speakPunctuation)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getSpeechRate()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setSpeechRate(Nullable<std::u16string> speechRate)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getStress()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setStress(Nullable<std::u16string> stress)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getTableLayout()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setTableLayout(Nullable<std::u16string> tableLayout)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getTextAlign()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setTextAlign(Nullable<std::u16string> textAlign)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getTextDecoration()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setTextDecoration(Nullable<std::u16string> textDecoration)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getTextIndent()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setTextIndent(Nullable<std::u16string> textIndent)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getTextShadow()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setTextShadow(Nullable<std::u16string> textShadow)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getTextTransform()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setTextTransform(Nullable<std::u16string> textTransform)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getTop()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setTop(Nullable<std::u16string> top)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getUnicodeBidi()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setUnicodeBidi(Nullable<std::u16string> unicodeBidi)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getVerticalAlign()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setVerticalAlign(Nullable<std::u16string> verticalAlign)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getVisibility()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setVisibility(Nullable<std::u16string> visibility)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getVoiceFamily()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setVoiceFamily(Nullable<std::u16string> voiceFamily)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getVolume()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setVolume(Nullable<std::u16string> volume)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getWhiteSpace()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setWhiteSpace(Nullable<std::u16string> whiteSpace)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getWidows()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setWidows(Nullable<std::u16string> widows)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getWidth()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setWidth(Nullable<std::u16string> width)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getWordSpacing()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setWordSpacing(Nullable<std::u16string> wordSpacing)
{
    // TODO: implement me!
}

Nullable<std::u16string> CSS2PropertiesImp::getZIndex()
{
    // TODO: implement me!
    return u"";
}

void CSS2PropertiesImp::setZIndex(Nullable<std::u16string> zIndex)
{
    // TODO: implement me!
}

}
}
}
}
