// Generated by esidl (r1745).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_DATAVIEWIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_DATAVIEWIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/typedarray/DataView.h>
#include "ArrayBufferViewImp.h"

#include <org/w3c/dom/typedarray/ArrayBuffer.h>
#include <org/w3c/dom/typedarray/ArrayBufferView.h>
#include <org/w3c/dom/typedarray/DataView.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class DataViewImp : public ObjectMixin<DataViewImp, ArrayBufferViewImp>
{
public:
    // DataView
    signed char getInt8(unsigned int byteOffset);
    unsigned char getUint8(unsigned int byteOffset);
    short getInt16(unsigned int byteOffset);
    short getInt16(unsigned int byteOffset, bool littleEndian);
    unsigned short getUint16(unsigned int byteOffset);
    unsigned short getUint16(unsigned int byteOffset, bool littleEndian);
    int getInt32(unsigned int byteOffset);
    int getInt32(unsigned int byteOffset, bool littleEndian);
    unsigned int getUint32(unsigned int byteOffset);
    unsigned int getUint32(unsigned int byteOffset, bool littleEndian);
    float getFloat32(unsigned int byteOffset);
    float getFloat32(unsigned int byteOffset, bool littleEndian);
    double getFloat64(unsigned int byteOffset);
    double getFloat64(unsigned int byteOffset, bool littleEndian);
    void setInt8(unsigned int byteOffset, signed char value);
    void setUint8(unsigned int byteOffset, unsigned char value);
    void setInt16(unsigned int byteOffset, short value);
    void setInt16(unsigned int byteOffset, short value, bool littleEndian);
    void setUint16(unsigned int byteOffset, unsigned short value);
    void setUint16(unsigned int byteOffset, unsigned short value, bool littleEndian);
    void setInt32(unsigned int byteOffset, int value);
    void setInt32(unsigned int byteOffset, int value, bool littleEndian);
    void setUint32(unsigned int byteOffset, unsigned int value);
    void setUint32(unsigned int byteOffset, unsigned int value, bool littleEndian);
    void setFloat32(unsigned int byteOffset, float value);
    void setFloat32(unsigned int byteOffset, float value, bool littleEndian);
    void setFloat64(unsigned int byteOffset, double value);
    void setFloat64(unsigned int byteOffset, double value, bool littleEndian);
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return typedarray::DataView::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return typedarray::DataView::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_DATAVIEWIMP_H_INCLUDED
