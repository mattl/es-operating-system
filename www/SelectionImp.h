// Generated by esidl (r1745).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_SELECTIONIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_SELECTIONIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/html/Selection.h>

#include <org/w3c/dom/ranges/Range.h>
#include <org/w3c/dom/Node.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class SelectionImp : public ObjectMixin<SelectionImp>
{
public:
    // Selection
    Node getAnchorNode() __attribute__((weak));
    int getAnchorOffset() __attribute__((weak));
    Node getFocusNode() __attribute__((weak));
    int getFocusOffset() __attribute__((weak));
    bool getIsCollapsed() __attribute__((weak));
    void collapse(Node parentNode, int offset) __attribute__((weak));
    void collapseToStart() __attribute__((weak));
    void collapseToEnd() __attribute__((weak));
    void selectAllChildren(Node parentNode) __attribute__((weak));
    void deleteFromDocument() __attribute__((weak));
    int getRangeCount() __attribute__((weak));
    ranges::Range getRangeAt(int index) __attribute__((weak));
    void addRange(ranges::Range range) __attribute__((weak));
    void removeRange(ranges::Range range) __attribute__((weak));
    void removeAllRanges() __attribute__((weak));
    std::u16string toString() __attribute__((weak));
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return html::Selection::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return html::Selection::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_SELECTIONIMP_H_INCLUDED
