// Generated by esidl (r1745).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_HTMLMETERELEMENTIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_HTMLMETERELEMENTIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/html/HTMLMeterElement.h>
#include "HTMLElementImp.h"

#include <org/w3c/dom/html/HTMLElement.h>
#include <org/w3c/dom/NodeList.h>
#include <org/w3c/dom/html/HTMLFormElement.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class HTMLMeterElementImp : public ObjectMixin<HTMLMeterElementImp, HTMLElementImp>
{
public:
    // HTMLMeterElement
    float getValue();
    void setValue(float value);
    float getMin();
    void setMin(float min);
    float getMax();
    void setMax(float max);
    float getLow();
    void setLow(float low);
    float getHigh();
    void setHigh(float high);
    float getOptimum();
    void setOptimum(float optimum);
    html::HTMLFormElement getForm();
    NodeList getLabels();
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return html::HTMLMeterElement::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return html::HTMLMeterElement::getMetaData();
    }
    HTMLMeterElementImp(DocumentImp* ownerDocument) :
        ObjectMixin(ownerDocument, u"meter") {
    }
    HTMLMeterElementImp(HTMLMeterElementImp* org, bool deep) :
        ObjectMixin(org, deep) {
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_HTMLMETERELEMENTIMP_H_INCLUDED
