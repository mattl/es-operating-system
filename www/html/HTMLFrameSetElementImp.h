// Generated by esidl (r1745).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_HTMLFRAMESETELEMENTIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_HTMLFRAMESETELEMENTIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/html/HTMLFrameSetElement.h>
#include "HTMLElementImp.h"

#include <org/w3c/dom/html/HTMLElement.h>
#include <org/w3c/dom/html/Function.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class HTMLFrameSetElementImp : public ObjectMixin<HTMLFrameSetElementImp, HTMLElementImp>
{
public:
    // HTMLFrameSetElement
    std::u16string getCols() __attribute__((weak));
    void setCols(std::u16string cols) __attribute__((weak));
    std::u16string getRows() __attribute__((weak));
    void setRows(std::u16string rows) __attribute__((weak));
    html::Function getOnafterprint() __attribute__((weak));
    void setOnafterprint(html::Function onafterprint) __attribute__((weak));
    html::Function getOnbeforeprint() __attribute__((weak));
    void setOnbeforeprint(html::Function onbeforeprint) __attribute__((weak));
    html::Function getOnbeforeunload() __attribute__((weak));
    void setOnbeforeunload(html::Function onbeforeunload) __attribute__((weak));
    html::Function getOnblur() __attribute__((weak));
    void setOnblur(html::Function onblur) __attribute__((weak));
    html::Function getOnerror() __attribute__((weak));
    void setOnerror(html::Function onerror) __attribute__((weak));
    html::Function getOnfocus() __attribute__((weak));
    void setOnfocus(html::Function onfocus) __attribute__((weak));
    html::Function getOnhashchange() __attribute__((weak));
    void setOnhashchange(html::Function onhashchange) __attribute__((weak));
    html::Function getOnload() __attribute__((weak));
    void setOnload(html::Function onload) __attribute__((weak));
    html::Function getOnmessage() __attribute__((weak));
    void setOnmessage(html::Function onmessage) __attribute__((weak));
    html::Function getOnoffline() __attribute__((weak));
    void setOnoffline(html::Function onoffline) __attribute__((weak));
    html::Function getOnonline() __attribute__((weak));
    void setOnonline(html::Function ononline) __attribute__((weak));
    html::Function getOnpagehide() __attribute__((weak));
    void setOnpagehide(html::Function onpagehide) __attribute__((weak));
    html::Function getOnpageshow() __attribute__((weak));
    void setOnpageshow(html::Function onpageshow) __attribute__((weak));
    html::Function getOnpopstate() __attribute__((weak));
    void setOnpopstate(html::Function onpopstate) __attribute__((weak));
    html::Function getOnredo() __attribute__((weak));
    void setOnredo(html::Function onredo) __attribute__((weak));
    html::Function getOnresize() __attribute__((weak));
    void setOnresize(html::Function onresize) __attribute__((weak));
    html::Function getOnstorage() __attribute__((weak));
    void setOnstorage(html::Function onstorage) __attribute__((weak));
    html::Function getOnundo() __attribute__((weak));
    void setOnundo(html::Function onundo) __attribute__((weak));
    html::Function getOnunload() __attribute__((weak));
    void setOnunload(html::Function onunload) __attribute__((weak));
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return html::HTMLFrameSetElement::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return html::HTMLFrameSetElement::getMetaData();
    }
    HTMLFrameSetElementImp(DocumentImp* ownerDocument) :
        ObjectMixin(ownerDocument, u"frameset") {
    }
    HTMLFrameSetElementImp(HTMLFrameSetElementImp* org, bool deep) :
        ObjectMixin(org, deep) {
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_HTMLFRAMESETELEMENTIMP_H_INCLUDED
