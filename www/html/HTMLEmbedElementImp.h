// Generated by esidl (r1745).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_HTMLEMBEDELEMENTIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_HTMLEMBEDELEMENTIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/html/HTMLEmbedElement.h>
#include "HTMLElementImp.h"

#include <org/w3c/dom/html/HTMLElement.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class HTMLEmbedElementImp : public ObjectMixin<HTMLEmbedElementImp, HTMLElementImp>
{
public:
    // HTMLEmbedElement
    std::u16string getSrc() __attribute__((weak));
    void setSrc(std::u16string src) __attribute__((weak));
    std::u16string getType() __attribute__((weak));
    void setType(std::u16string type) __attribute__((weak));
    std::u16string getWidth() __attribute__((weak));
    void setWidth(std::u16string width) __attribute__((weak));
    std::u16string getHeight() __attribute__((weak));
    void setHeight(std::u16string height) __attribute__((weak));
    // HTMLEmbedElement-12
    std::u16string getAlign() __attribute__((weak));
    void setAlign(std::u16string align) __attribute__((weak));
    std::u16string getName() __attribute__((weak));
    void setName(std::u16string name) __attribute__((weak));
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return html::HTMLEmbedElement::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return html::HTMLEmbedElement::getMetaData();
    }
    HTMLEmbedElementImp(DocumentImp* ownerDocument) :
        ObjectMixin(ownerDocument, u"embed") {
    }
    HTMLEmbedElementImp(HTMLEmbedElementImp* org, bool deep) :
        ObjectMixin(org, deep) {
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_HTMLEMBEDELEMENTIMP_H_INCLUDED
