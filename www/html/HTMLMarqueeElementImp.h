// Generated by esidl (r1752).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_HTMLMARQUEEELEMENTIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_HTMLMARQUEEELEMENTIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/html/HTMLMarqueeElement.h>
#include "HTMLElementImp.h"

#include <org/w3c/dom/html/HTMLElement.h>
#include <org/w3c/dom/html/Function.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class HTMLMarqueeElementImp : public ObjectMixin<HTMLMarqueeElementImp, HTMLElementImp>
{
public:
    HTMLMarqueeElementImp(DocumentImp* ownerDocument) :
        ObjectMixin(ownerDocument, u"marquee") {
    }
    HTMLMarqueeElementImp(HTMLMarqueeElementImp* org, bool deep) :
        ObjectMixin(org, deep) {
    }

    // HTMLMarqueeElement
    std::u16string getBehavior() __attribute__((weak));
    void setBehavior(std::u16string behavior) __attribute__((weak));
    std::u16string getBgColor() __attribute__((weak));
    void setBgColor(std::u16string bgColor) __attribute__((weak));
    std::u16string getDirection() __attribute__((weak));
    void setDirection(std::u16string direction) __attribute__((weak));
    std::u16string getHeight() __attribute__((weak));
    void setHeight(std::u16string height) __attribute__((weak));
    unsigned int getHspace() __attribute__((weak));
    void setHspace(unsigned int hspace) __attribute__((weak));
    int getLoop() __attribute__((weak));
    void setLoop(int loop) __attribute__((weak));
    unsigned int getScrollAmount() __attribute__((weak));
    void setScrollAmount(unsigned int scrollAmount) __attribute__((weak));
    unsigned int getScrollDelay() __attribute__((weak));
    void setScrollDelay(unsigned int scrollDelay) __attribute__((weak));
    bool getTrueSpeed() __attribute__((weak));
    void setTrueSpeed(bool trueSpeed) __attribute__((weak));
    unsigned int getVspace() __attribute__((weak));
    void setVspace(unsigned int vspace) __attribute__((weak));
    std::u16string getWidth() __attribute__((weak));
    void setWidth(std::u16string width) __attribute__((weak));
    html::Function getOnbounce() __attribute__((weak));
    void setOnbounce(html::Function onbounce) __attribute__((weak));
    html::Function getOnfinish() __attribute__((weak));
    void setOnfinish(html::Function onfinish) __attribute__((weak));
    html::Function getOnstart() __attribute__((weak));
    void setOnstart(html::Function onstart) __attribute__((weak));
    void start() __attribute__((weak));
    void stop() __attribute__((weak));
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return html::HTMLMarqueeElement::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return html::HTMLMarqueeElement::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_HTMLMARQUEEELEMENTIMP_H_INCLUDED
