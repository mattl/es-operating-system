// Generated by esidl (r1752).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "HTMLFrameElementImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

std::u16string HTMLFrameElementImp::getFrameBorder()
{
    // TODO: implement me!
    return u"";
}

void HTMLFrameElementImp::setFrameBorder(std::u16string frameBorder)
{
    // TODO: implement me!
}

std::u16string HTMLFrameElementImp::getLongDesc()
{
    // TODO: implement me!
    return u"";
}

void HTMLFrameElementImp::setLongDesc(std::u16string longDesc)
{
    // TODO: implement me!
}

std::u16string HTMLFrameElementImp::getMarginHeight()
{
    // TODO: implement me!
    return u"";
}

void HTMLFrameElementImp::setMarginHeight(std::u16string marginHeight)
{
    // TODO: implement me!
}

std::u16string HTMLFrameElementImp::getMarginWidth()
{
    // TODO: implement me!
    return u"";
}

void HTMLFrameElementImp::setMarginWidth(std::u16string marginWidth)
{
    // TODO: implement me!
}

std::u16string HTMLFrameElementImp::getName()
{
    // TODO: implement me!
    return u"";
}

void HTMLFrameElementImp::setName(std::u16string name)
{
    // TODO: implement me!
}

bool HTMLFrameElementImp::getNoResize()
{
    // TODO: implement me!
    return 0;
}

void HTMLFrameElementImp::setNoResize(bool noResize)
{
    // TODO: implement me!
}

std::u16string HTMLFrameElementImp::getScrolling()
{
    // TODO: implement me!
    return u"";
}

void HTMLFrameElementImp::setScrolling(std::u16string scrolling)
{
    // TODO: implement me!
}

std::u16string HTMLFrameElementImp::getSrc()
{
    // TODO: implement me!
    return u"";
}

void HTMLFrameElementImp::setSrc(std::u16string src)
{
    // TODO: implement me!
}

Document HTMLFrameElementImp::getContentDocument()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

html::Window HTMLFrameElementImp::getContentWindow()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

}
}
}
}
