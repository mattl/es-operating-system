// Generated by esidl (r1745).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_HTMLAPPLETELEMENTIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_HTMLAPPLETELEMENTIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/html/HTMLAppletElement.h>
#include "HTMLElementImp.h"

#include <org/w3c/dom/html/HTMLElement.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class HTMLAppletElementImp : public ObjectMixin<HTMLAppletElementImp, HTMLElementImp>
{
public:
    // HTMLAppletElement
    std::u16string getAlign() __attribute__((weak));
    void setAlign(std::u16string align) __attribute__((weak));
    std::u16string getAlt() __attribute__((weak));
    void setAlt(std::u16string alt) __attribute__((weak));
    std::u16string getArchive() __attribute__((weak));
    void setArchive(std::u16string archive) __attribute__((weak));
    std::u16string getCode() __attribute__((weak));
    void setCode(std::u16string code) __attribute__((weak));
    std::u16string getCodeBase() __attribute__((weak));
    void setCodeBase(std::u16string codeBase) __attribute__((weak));
    std::u16string getHeight() __attribute__((weak));
    void setHeight(std::u16string height) __attribute__((weak));
    unsigned int getHspace() __attribute__((weak));
    void setHspace(unsigned int hspace) __attribute__((weak));
    std::u16string getName() __attribute__((weak));
    void setName(std::u16string name) __attribute__((weak));
    std::u16string getObject() __attribute__((weak));
    void setObject(std::u16string object) __attribute__((weak));
    unsigned int getVspace() __attribute__((weak));
    void setVspace(unsigned int vspace) __attribute__((weak));
    std::u16string getWidth() __attribute__((weak));
    void setWidth(std::u16string width) __attribute__((weak));
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return html::HTMLAppletElement::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return html::HTMLAppletElement::getMetaData();
    }
    HTMLAppletElementImp(DocumentImp* ownerDocument) :
        ObjectMixin(ownerDocument, u"applet") {
    }
    HTMLAppletElementImp(HTMLAppletElementImp* org, bool deep) :
        ObjectMixin(org, deep) {
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_HTMLAPPLETELEMENTIMP_H_INCLUDED
