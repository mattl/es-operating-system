// Generated by esidl (r1745).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_HTMLFORMELEMENTIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_HTMLFORMELEMENTIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/html/HTMLFormElement.h>
#include "HTMLElementImp.h"

#include <org/w3c/dom/html/HTMLElement.h>
#include <org/w3c/dom/html/HTMLFormControlsCollection.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class HTMLFormElementImp : public ObjectMixin<HTMLFormElementImp, HTMLElementImp>
{
public:
    // HTMLFormElement
    std::u16string getAcceptCharset() __attribute__((weak));
    void setAcceptCharset(std::u16string acceptCharset) __attribute__((weak));
    std::u16string getAction() __attribute__((weak));
    void setAction(std::u16string action) __attribute__((weak));
    std::u16string getAutocomplete() __attribute__((weak));
    void setAutocomplete(std::u16string autocomplete) __attribute__((weak));
    std::u16string getEnctype() __attribute__((weak));
    void setEnctype(std::u16string enctype) __attribute__((weak));
    std::u16string getMethod() __attribute__((weak));
    void setMethod(std::u16string method) __attribute__((weak));
    std::u16string getName() __attribute__((weak));
    void setName(std::u16string name) __attribute__((weak));
    bool getNoValidate() __attribute__((weak));
    void setNoValidate(bool noValidate) __attribute__((weak));
    std::u16string getTarget() __attribute__((weak));
    void setTarget(std::u16string target) __attribute__((weak));
    html::HTMLFormControlsCollection getElements() __attribute__((weak));
    int getLength() __attribute__((weak));
    Any item(unsigned int index) __attribute__((weak));
    Any namedItem(std::u16string name) __attribute__((weak));
    void submit() __attribute__((weak));
    void reset() __attribute__((weak));
    bool checkValidity() __attribute__((weak));
    void dispatchFormInput() __attribute__((weak));
    void dispatchFormChange() __attribute__((weak));
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return html::HTMLFormElement::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return html::HTMLFormElement::getMetaData();
    }
    HTMLFormElementImp(DocumentImp* ownerDocument) :
        ObjectMixin(ownerDocument, u"form") {
    }
    HTMLFormElementImp(HTMLFormElementImp* org, bool deep) :
        ObjectMixin(org, deep) {
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_HTMLFORMELEMENTIMP_H_INCLUDED
