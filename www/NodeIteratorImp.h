// Generated by esidl (r1745).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_NODEITERATORIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_NODEITERATORIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/traversal/NodeIterator.h>

#include <org/w3c/dom/traversal/NodeFilter.h>
#include <org/w3c/dom/DOMException.h>
#include <org/w3c/dom/Node.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class NodeIteratorImp : public ObjectMixin<NodeIteratorImp>
{
public:
    // NodeIterator
    Node getRoot() __attribute__((weak));
    unsigned int getWhatToShow() __attribute__((weak));
    traversal::NodeFilter getFilter() __attribute__((weak));
    bool getExpandEntityReferences() __attribute__((weak));
    Node nextNode() throw(DOMException) __attribute__((weak));
    Node previousNode() throw(DOMException) __attribute__((weak));
    void detach() __attribute__((weak));
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return traversal::NodeIterator::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return traversal::NodeIterator::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_NODEITERATORIMP_H_INCLUDED
