diff -bcrN gcc-4.6.1.org/gcc/config/es.h gcc-4.6.1/gcc/config/es.h
*** gcc-4.6.1.org/gcc/config/es.h	1970-01-01 09:00:00.000000000 +0900
--- gcc-4.6.1/gcc/config/es.h	2011-08-05 18:06:44.407641086 +0900
***************
*** 0 ****
--- 1,45 ----
+ /* Definitions for es systems with ELF format
+    Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.
+ 
+ This file is part of GNU CC.
+ 
+ GNU CC is free software; you can redistribute it and/or modify
+ it under the terms of the GNU General Public License as published by
+ the Free Software Foundation; either version 2, or (at your option)
+ any later version.
+ 
+ GNU CC is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU General Public License for more details.
+ 
+ You should have received a copy of the GNU General Public License
+ along with GNU CC; see the file COPYING.  If not, write to
+ the Free Software Foundation, 59 Temple Place - Suite 330,
+ Boston, MA 02111-1307, USA.  */
+ 
+ /* The system headers under es are C++-aware.  */
+ #undef NO_IMPLICIT_EXTERN_C
+ #define NO_IMPLICIT_EXTERN_C
+ 
+ /* Provide a STARTFILE_SPEC appropriate for GNU/Linux.  Here we add
+    the GNU/Linux magical crtbegin.o file (see crtstuff.c) which
+    provides part of the support for getting C++ file-scope static
+    object constructed before entering `main'.  */
+ 
+ #undef  STARTFILE_SPEC
+ #define STARTFILE_SPEC \
+   "crt0.o%s crti.o%s crtbegin.o%s"
+ 
+ /* Provide a ENDFILE_SPEC appropriate for GNU/Linux.  Here we tack on
+    the GNU/Linux magical crtend.o file (see crtstuff.c) which
+    provides part of the support for getting C++ file-scope static
+    object constructed before entering `main', followed by a normal
+    GNU/Linux "finalizer" file, `crtn.o'.  */
+ 
+ #undef  ENDFILE_SPEC
+ #define ENDFILE_SPEC \
+   "crtend.o%s crtn.o%s"
+ 
+ #undef LIB_SPEC
+ #define LIB_SPEC "-lc -les -lc -les"
diff -bcrN gcc-4.6.1.org/gcc/config/gthr-es.c gcc-4.6.1/gcc/config/gthr-es.c
*** gcc-4.6.1.org/gcc/config/gthr-es.c	1970-01-01 09:00:00.000000000 +0900
--- gcc-4.6.1/gcc/config/gthr-es.c	2011-08-05 17:01:49.000000000 +0900
***************
*** 0 ****
--- 1,120 ----
+ /* Implementation of es-specific threads compatibility routines for
+    libgcc2.   */
+ 
+ /* Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.
+ 
+ This file is part of GCC.
+ 
+ GCC is free software; you can redistribute it and/or modify it under
+ the terms of the GNU General Public License as published by the Free
+ Software Foundation; either version 2, or (at your option) any later
+ version.
+ 
+ GCC is distributed in the hope that it will be useful, but WITHOUT ANY
+ WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ for more details.
+ 
+ You should have received a copy of the GNU General Public License
+ along with GCC; see the file COPYING.  If not, write to the Free
+ Software Foundation, 59 Temple Place - Suite 330, Boston, MA
+ 02111-1307, USA.  */
+ 
+ /* As a special exception, if you link this library with other files,
+    some of which are compiled with GCC, to produce an executable,
+    this library does not by itself cause the resulting executable
+    to be covered by the GNU General Public License.
+    This exception does not however invalidate any other reasons why
+    the executable file might be covered by the GNU General Public License.  */
+ 
+ #include <gthr-es.h>
+ 
+ int
+ __gthread_active_p (void)
+ {
+   return 1;
+ }
+ 
+ int
+ __gthread_once (__gthread_once_t *once, void (*func) (void))
+ {
+   return pthread_once(once, func);
+ }
+ 
+ int
+ __gthread_key_create (__gthread_key_t *key, void (*dtor) (void *))
+ {
+   return pthread_key_create (key, dtor);
+ }
+ 
+ int
+ __gthread_key_dtor (__gthread_key_t key, void *ptr)
+ {
+   /* Just reset the key value to zero.  */
+   if (ptr)
+     return __gthread_setspecific (key, 0);
+   else
+     return 0;
+ }
+ 
+ int
+ __gthread_key_delete (__gthread_key_t key)
+ {
+   return pthread_key_delete (key);
+ }
+ 
+ void *
+ __gthread_getspecific (__gthread_key_t key)
+ {
+   return pthread_getspecific (key);
+ }
+ 
+ int
+ __gthread_setspecific (__gthread_key_t key, const void *ptr)
+ {
+   return pthread_setspecific (key, ptr);
+ }
+ 
+ void
+ __gthread_mutex_init_function (__gthread_mutex_t *mutex)
+ {
+   pthread_mutex_init  (mutex, 0);
+ }
+ 
+ int
+ __gthread_mutex_lock (__gthread_mutex_t *mutex)
+ {
+   pthread_mutex_lock (mutex);
+   return 0;
+ }
+ 
+ int
+ __gthread_mutex_trylock (__gthread_mutex_t *mutex)
+ {
+   return pthread_mutex_trylock (mutex);
+ }
+ 
+ int
+ __gthread_mutex_unlock (__gthread_mutex_t *mutex)
+ {
+   pthread_mutex_unlock (mutex);
+   return 0;
+ }
+ 
+ int
+ __gthread_recursive_mutex_lock (__gthread_recursive_mutex_t *mutex)
+ {
+   return __gthread_mutex_lock (mutex);
+ }
+ 
+ int
+ __gthread_recursive_mutex_trylock (__gthread_recursive_mutex_t *mutex)
+ {
+   return __gthread_mutex_trylock (mutex);
+ }
+ 
+ int
+ __gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *mutex)
+ {
+   return __gthread_mutex_unlock (mutex);
+ }
diff -bcrN gcc-4.6.1.org/gcc/config/i386/es-elf.h gcc-4.6.1/gcc/config/i386/es-elf.h
*** gcc-4.6.1.org/gcc/config/i386/es-elf.h	1970-01-01 09:00:00.000000000 +0900
--- gcc-4.6.1/gcc/config/i386/es-elf.h	2011-08-05 17:01:49.000000000 +0900
***************
*** 0 ****
--- 1,34 ----
+ /* Definitions for es targeting an ix86 using ELF.
+    Copyright (C) 1996, 1997, 2000, 2001, 2002 Free Software Foundation, Inc.
+ 
+ This file is part of GNU CC.
+ 
+ GNU CC is free software; you can redistribute it and/or modify
+ it under the terms of the GNU General Public License as published by
+ the Free Software Foundation; either version 2, or (at your option)
+ any later version.
+ 
+ GNU CC is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU General Public License for more details.
+ 
+ You should have received a copy of the GNU General Public License
+ along with GNU CC; see the file COPYING.  If not, write to
+ the Free Software Foundation, 59 Temple Place - Suite 330,
+ Boston, MA 02111-1307, USA.  */
+ 
+ #define TARGET_EXECUTABLE_SUFFIX ".elf"
+ #define HOST_EXECUTABLE_SUFFIX  ".elf"
+ 
+ /* Specify predefined symbols in preprocessor.  */
+ 
+ #define TARGET_OS_CPP_BUILTINS()                \
+   do                                            \
+     {                                           \
+         builtin_define ("__i386__");            \
+         builtin_define ("__es__");              \
+         builtin_define ("__ELF__");             \
+         builtin_assert ("system=es");           \
+     }                                           \
+   while (0)
diff -bcrN gcc-4.6.1.org/gcc/config/i386/t-es-i386 gcc-4.6.1/gcc/config/i386/t-es-i386
*** gcc-4.6.1.org/gcc/config/i386/t-es-i386	1970-01-01 09:00:00.000000000 +0900
--- gcc-4.6.1/gcc/config/i386/t-es-i386	2011-08-05 17:01:49.000000000 +0900
***************
*** 0 ****
--- 1,8 ----
+ # Assemble startup files.
+ $(T)crti.o: $(srcdir)/config/i386/sol2-ci.asm $(GCC_PASSES)
+ 	sed -e '/^!/d' <$(srcdir)/config/i386/sol2-ci.asm >crti.s
+ 	$(GCC_FOR_TARGET) -c -o $(T)crti.o crti.s
+ $(T)crtn.o: $(srcdir)/config/i386/sol2-cn.asm $(GCC_PASSES)
+ 	sed -e '/^!/d' <$(srcdir)/config/i386/sol2-cn.asm >crtn.s
+ 	$(GCC_FOR_TARGET) -c -o $(T)crtn.o crtn.s
+ 
diff -bcrN gcc-4.6.1.org/gcc/config/t-es gcc-4.6.1/gcc/config/t-es
*** gcc-4.6.1.org/gcc/config/t-es	1970-01-01 09:00:00.000000000 +0900
--- gcc-4.6.1/gcc/config/t-es	2011-08-05 17:01:49.000000000 +0900
***************
*** 0 ****
--- 1 ----
+ LIB2FUNCS_EXTRA = $(srcdir)/config/gthr-es.c
diff -bcrN gcc-4.6.1.org/gcc/config.gcc gcc-4.6.1/gcc/config.gcc
*** gcc-4.6.1.org/gcc/config.gcc	2011-05-23 05:03:43.000000000 +0900
--- gcc-4.6.1/gcc/config.gcc	2011-08-05 18:25:52.473506519 +0900
***************
*** 1350,1355 ****
--- 1350,1363 ----
  	extra_parts="crtbegin.o crtend.o crti.o crtn.o"
  	tmake_file="${tmake_file} i386/t-rtems-i386 i386/t-crtstuff t-rtems"
  	;;
+ i[34567]86-*-es*)
+ 	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h i386/i386elf.h i386/es-elf.h es.h"
+ 	extra_parts="crti.o crtn.o crtbegin.o crtend.o"
+ 	tmake_file="i386/t-crtstuff i386/t-es-i386 t-es"
+ 	case ${enable_threads} in
+ 		yes) thread_file='es' ;;
+ 	esac
+ 	;;
  i[34567]86-*-solaris2*)
  	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h i386/sysv4.h sol2.h"
  	# Set default arch_32 to pentium4, tune_32 to generic like the other
diff -bcrN gcc-4.6.1.org/gcc/configure gcc-4.6.1/gcc/configure
*** gcc-4.6.1.org/gcc/configure	2011-03-01 00:36:37.000000000 +0900
--- gcc-4.6.1/gcc/configure	2011-08-05 19:02:28.069429982 +0900
***************
*** 10790,10796 ****
      target_thread_file='single'
      ;;
    aix | dce | gnat | irix | posix | posix95 | rtems | \
!   single | solaris | vxworks | win32 | mipssde)
      target_thread_file=${enable_threads}
      ;;
    *)
--- 10790,10796 ----
      target_thread_file='single'
      ;;
    aix | dce | gnat | irix | posix | posix95 | rtems | \
!   single | solaris | vxworks | win32 | mipssde | es)
      target_thread_file=${enable_threads}
      ;;
    *)
diff -bcrN gcc-4.6.1.org/gcc/configure.ac gcc-4.6.1/gcc/configure.ac
*** gcc-4.6.1.org/gcc/configure.ac	2011-03-01 00:36:37.000000000 +0900
--- gcc-4.6.1/gcc/configure.ac	2011-08-05 18:26:46.858470636 +0900
***************
*** 1332,1338 ****
      target_thread_file='single'
      ;;
    aix | dce | gnat | irix | posix | posix95 | rtems | \
!   single | solaris | vxworks | win32 | mipssde)
      target_thread_file=${enable_threads}
      ;;
    *)
--- 1332,1338 ----
      target_thread_file='single'
      ;;
    aix | dce | gnat | irix | posix | posix95 | rtems | \
!   single | solaris | vxworks | win32 | mipssde | es)
      target_thread_file=${enable_threads}
      ;;
    *)
diff -bcrN gcc-4.6.1.org/gcc/gthr-es.h gcc-4.6.1/gcc/gthr-es.h
*** gcc-4.6.1.org/gcc/gthr-es.h	1970-01-01 09:00:00.000000000 +0900
--- gcc-4.6.1/gcc/gthr-es.h	2011-08-05 17:01:49.000000000 +0900
***************
*** 0 ****
--- 1,67 ----
+ /* Threads compatibility routines for libgcc2 and libobjc.  */
+ /* Compile this one with gcc.  */
+ /* Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.
+ 
+ This file is part of GCC.
+ 
+ GCC is free software; you can redistribute it and/or modify it under
+ the terms of the GNU General Public License as published by the Free
+ Software Foundation; either version 2, or (at your option) any later
+ version.
+ 
+ GCC is distributed in the hope that it will be useful, but WITHOUT ANY
+ WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ for more details.
+ 
+ You should have received a copy of the GNU General Public License
+ along with GCC; see the file COPYING.  If not, write to the Free
+ Software Foundation, 59 Temple Place - Suite 330, Boston, MA
+ 02111-1307, USA.  */
+ 
+ /* As a special exception, if you link this library with other files,
+    some of which are compiled with GCC, to produce an executable,
+    this library does not by itself cause the resulting executable
+    to be covered by the GNU General Public License.
+    This exception does not however invalidate any other reasons why
+    the executable file might be covered by the GNU General Public License.  */
+ 
+ #ifndef GCC_GTHR_ES_H
+ #define GCC_GTHR_ES_H
+ 
+ #define __GTHREADS 1
+ #include <pthread.h>
+ 
+ #ifdef __cplusplus
+ extern "C" {
+ #endif
+ 
+ typedef pthread_key_t __gthread_key_t;
+ typedef pthread_once_t __gthread_once_t;
+ typedef pthread_mutex_t __gthread_mutex_t;
+ typedef pthread_mutex_t __gthread_recursive_mutex_t;
+ 
+ #define __GTHREAD_MUTEX_INIT PTHREAD_MUTEX_INITIALIZER
+ #define __GTHREAD_ONCE_INIT PTHREAD_ONCE_INIT
+ #define __GTHREAD_RECURSIVE_MUTEX_INIT PTHREAD_MUTEX_INITIALIZER
+ 
+ int __gthread_active_p (void);
+ int __gthread_once (__gthread_once_t *once, void (*func) (void));
+ int __gthread_key_create (__gthread_key_t *key, void (*dtor) (void *));
+ int __gthread_key_dtor (__gthread_key_t key, void *ptr);
+ int __gthread_key_delete (__gthread_key_t key);
+ void* __gthread_getspecific (__gthread_key_t key);
+ int __gthread_setspecific (__gthread_key_t key, const void *ptr);
+ void __gthread_mutex_init_function (__gthread_mutex_t *mutex);
+ int __gthread_mutex_lock (__gthread_mutex_t *mutex);
+ int __gthread_mutex_trylock (__gthread_mutex_t *mutex);
+ int __gthread_mutex_unlock (__gthread_mutex_t *mutex);
+ int __gthread_recursive_mutex_lock (__gthread_recursive_mutex_t *mutex);
+ int __gthread_recursive_mutex_trylock (__gthread_recursive_mutex_t *mutex);
+ int __gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *mutex);
+ 
+ #ifdef __cplusplus
+ }
+ #endif
+ 
+ #endif /* ! GCC_GTHR_ES_H */
diff -bcrN gcc-4.6.1.org/libgcc/config.host gcc-4.6.1/libgcc/config.host
*** gcc-4.6.1.org/libgcc/config.host	2011-03-14 15:06:23.000000000 +0900
--- gcc-4.6.1/libgcc/config.host	2011-08-05 18:30:02.190366776 +0900
***************
*** 168,173 ****
--- 168,175 ----
    ;;
  *-*-rtems*)
    ;;
+ *-*-es*)
+   ;;
  *-*-vxworks*)
    ;;
  *-*-elf)
***************
*** 320,325 ****
--- 322,329 ----
  	;;
  i[34567]86-*-rtems*)
  	;;
+ i[34567]86-*-es*)
+ 	;;
  i[34567]86-*-solaris2*)
  	tmake_file="${tmake_file} i386/t-sol2"
  	case ${host} in
