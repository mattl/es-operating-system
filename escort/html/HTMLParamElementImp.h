// Generated by esidl (r1745).
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_HTMLPARAMELEMENTIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_HTMLPARAMELEMENTIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/html/HTMLParamElement.h>
#include "HTMLElementImp.h"

#include <org/w3c/dom/html/HTMLElement.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class HTMLParamElementImp : public ObjectMixin<HTMLParamElementImp, HTMLElementImp>
{
public:
    // HTMLParamElement
    std::u16string getName();
    void setName(std::u16string name);
    std::u16string getValue();
    void setValue(std::u16string value);
    // HTMLParamElement-27
    std::u16string getType();
    void setType(std::u16string type);
    std::u16string getValueType();
    void setValueType(std::u16string valueType);
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return html::HTMLParamElement::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return html::HTMLParamElement::getMetaData();
    }
    HTMLParamElementImp(DocumentImp* ownerDocument) :
        ObjectMixin(ownerDocument, u"param") {
    }
    HTMLParamElementImp(HTMLParamElementImp* org, bool deep) :
        ObjectMixin(org, deep) {
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_HTMLPARAMELEMENTIMP_H_INCLUDED
