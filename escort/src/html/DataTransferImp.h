// Generated by esidl 0.2.1.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_DATATRANSFERIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_DATATRANSFERIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/html/DataTransfer.h>

#include <org/w3c/dom/Element.h>
#include <org/w3c/dom/DOMStringList.h>
#include <org/w3c/dom/file/FileList.h>
#include <org/w3c/dom/html/DataTransferItemList.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class DataTransferImp : public ObjectMixin<DataTransferImp>
{
public:
    // DataTransfer
    std::u16string getDropEffect();
    void setDropEffect(const std::u16string& dropEffect);
    std::u16string getEffectAllowed();
    void setEffectAllowed(const std::u16string& effectAllowed);
    html::DataTransferItemList getItems();
    void setDragImage(Element image, int x, int y);
    void addElement(Element element);
    DOMStringList getTypes();
    std::u16string getData(const std::u16string& format);
    void setData(const std::u16string& format, const std::u16string& data);
    void clearData();
    void clearData(const std::u16string& format);
    file::FileList getFiles();
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return html::DataTransfer::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return html::DataTransfer::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_DATATRANSFERIMP_H_INCLUDED
