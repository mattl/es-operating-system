// Generated by esidl 0.2.1.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "HTMLMarqueeElementImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

std::u16string HTMLMarqueeElementImp::getBehavior()
{
    // TODO: implement me!
    return u"";
}

void HTMLMarqueeElementImp::setBehavior(const std::u16string& behavior)
{
    // TODO: implement me!
}

std::u16string HTMLMarqueeElementImp::getBgColor()
{
    // TODO: implement me!
    return u"";
}

void HTMLMarqueeElementImp::setBgColor(const std::u16string& bgColor)
{
    // TODO: implement me!
}

std::u16string HTMLMarqueeElementImp::getDirection()
{
    // TODO: implement me!
    return u"";
}

void HTMLMarqueeElementImp::setDirection(const std::u16string& direction)
{
    // TODO: implement me!
}

std::u16string HTMLMarqueeElementImp::getHeight()
{
    // TODO: implement me!
    return u"";
}

void HTMLMarqueeElementImp::setHeight(const std::u16string& height)
{
    // TODO: implement me!
}

unsigned int HTMLMarqueeElementImp::getHspace()
{
    // TODO: implement me!
    return 0;
}

void HTMLMarqueeElementImp::setHspace(unsigned int hspace)
{
    // TODO: implement me!
}

int HTMLMarqueeElementImp::getLoop()
{
    // TODO: implement me!
    return 0;
}

void HTMLMarqueeElementImp::setLoop(int loop)
{
    // TODO: implement me!
}

unsigned int HTMLMarqueeElementImp::getScrollAmount()
{
    // TODO: implement me!
    return 0;
}

void HTMLMarqueeElementImp::setScrollAmount(unsigned int scrollAmount)
{
    // TODO: implement me!
}

unsigned int HTMLMarqueeElementImp::getScrollDelay()
{
    // TODO: implement me!
    return 0;
}

void HTMLMarqueeElementImp::setScrollDelay(unsigned int scrollDelay)
{
    // TODO: implement me!
}

bool HTMLMarqueeElementImp::getTrueSpeed()
{
    // TODO: implement me!
    return 0;
}

void HTMLMarqueeElementImp::setTrueSpeed(bool trueSpeed)
{
    // TODO: implement me!
}

unsigned int HTMLMarqueeElementImp::getVspace()
{
    // TODO: implement me!
    return 0;
}

void HTMLMarqueeElementImp::setVspace(unsigned int vspace)
{
    // TODO: implement me!
}

std::u16string HTMLMarqueeElementImp::getWidth()
{
    // TODO: implement me!
    return u"";
}

void HTMLMarqueeElementImp::setWidth(const std::u16string& width)
{
    // TODO: implement me!
}

html::Function HTMLMarqueeElementImp::getOnbounce()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void HTMLMarqueeElementImp::setOnbounce(html::Function onbounce)
{
    // TODO: implement me!
}

html::Function HTMLMarqueeElementImp::getOnfinish()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void HTMLMarqueeElementImp::setOnfinish(html::Function onfinish)
{
    // TODO: implement me!
}

html::Function HTMLMarqueeElementImp::getOnstart()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void HTMLMarqueeElementImp::setOnstart(html::Function onstart)
{
    // TODO: implement me!
}

void HTMLMarqueeElementImp::start()
{
    // TODO: implement me!
}

void HTMLMarqueeElementImp::stop()
{
    // TODO: implement me!
}

}
}
}
}
