// Generated by esidl 0.2.1.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_HTMLDOCUMENTIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_HTMLDOCUMENTIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/html/HTMLDocument.h>

#include <org/w3c/dom/html/HTMLElement.h>
#include <org/w3c/dom/Element.h>
#include <org/w3c/dom/NodeList.h>
#include <org/w3c/dom/html/HTMLCollection.h>
#include <org/w3c/dom/DOMElementMap.h>
#include <org/w3c/dom/html/HTMLAllCollection.h>
#include <org/w3c/dom/html/HTMLDocument.h>
#include <org/w3c/dom/html/HTMLHeadElement.h>
#include <org/w3c/dom/html/Window.h>
#include <org/w3c/dom/html/Location.h>
#include <org/w3c/dom/html/Function.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class HTMLDocumentImp : public ObjectMixin<HTMLDocumentImp>
{
public:
    // HTMLDocument
    html::Location getLocation();
    void setLocation(const std::u16string& location);
    std::u16string getURL();
    std::u16string getDomain();
    void setDomain(const std::u16string& domain);
    std::u16string getReferrer();
    std::u16string getCookie();
    void setCookie(const std::u16string& cookie);
    std::u16string getLastModified();
    std::u16string getReadyState();
    Any getElement(const std::u16string& name);
    std::u16string getTitle();
    void setTitle(const std::u16string& title);
    std::u16string getDir();
    void setDir(const std::u16string& dir);
    html::HTMLElement getBody();
    void setBody(html::HTMLElement body);
    html::HTMLHeadElement getHead();
    html::HTMLCollection getImages();
    html::HTMLCollection getEmbeds();
    html::HTMLCollection getPlugins();
    html::HTMLCollection getLinks();
    html::HTMLCollection getForms();
    html::HTMLCollection getScripts();
    NodeList getElementsByName(const std::u16string& elementName);
    DOMElementMap getCssElementMap();
    std::u16string getInnerHTML();
    void setInnerHTML(const std::u16string& innerHTML);
    html::HTMLDocument open();
    html::HTMLDocument open(const std::u16string& type);
    html::HTMLDocument open(const std::u16string& type, const std::u16string& replace);
    html::Window open(const std::u16string& url, const std::u16string& name, const std::u16string& features);
    html::Window open(const std::u16string& url, const std::u16string& name, const std::u16string& features, bool replace);
    void close();
    void write(Variadic<std::u16string> text = Variadic<std::u16string>());
    void writeln(Variadic<std::u16string> text = Variadic<std::u16string>());
    html::Window getDefaultView();
    Element getActiveElement();
    bool hasFocus();
    std::u16string getDesignMode();
    void setDesignMode(const std::u16string& designMode);
    bool execCommand(const std::u16string& commandId);
    bool execCommand(const std::u16string& commandId, bool showUI);
    bool execCommand(const std::u16string& commandId, bool showUI, const std::u16string& value);
    bool queryCommandEnabled(const std::u16string& commandId);
    bool queryCommandIndeterm(const std::u16string& commandId);
    bool queryCommandState(const std::u16string& commandId);
    bool queryCommandSupported(const std::u16string& commandId);
    std::u16string queryCommandValue(const std::u16string& commandId);
    html::HTMLCollection getCommands();
    html::Function getOnabort();
    void setOnabort(html::Function onabort);
    html::Function getOnblur();
    void setOnblur(html::Function onblur);
    html::Function getOncanplay();
    void setOncanplay(html::Function oncanplay);
    html::Function getOncanplaythrough();
    void setOncanplaythrough(html::Function oncanplaythrough);
    html::Function getOnchange();
    void setOnchange(html::Function onchange);
    html::Function getOnclick();
    void setOnclick(html::Function onclick);
    html::Function getOncontextmenu();
    void setOncontextmenu(html::Function oncontextmenu);
    html::Function getOncuechange();
    void setOncuechange(html::Function oncuechange);
    html::Function getOndblclick();
    void setOndblclick(html::Function ondblclick);
    html::Function getOndrag();
    void setOndrag(html::Function ondrag);
    html::Function getOndragend();
    void setOndragend(html::Function ondragend);
    html::Function getOndragenter();
    void setOndragenter(html::Function ondragenter);
    html::Function getOndragleave();
    void setOndragleave(html::Function ondragleave);
    html::Function getOndragover();
    void setOndragover(html::Function ondragover);
    html::Function getOndragstart();
    void setOndragstart(html::Function ondragstart);
    html::Function getOndrop();
    void setOndrop(html::Function ondrop);
    html::Function getOndurationchange();
    void setOndurationchange(html::Function ondurationchange);
    html::Function getOnemptied();
    void setOnemptied(html::Function onemptied);
    html::Function getOnended();
    void setOnended(html::Function onended);
    html::Function getOnerror();
    void setOnerror(html::Function onerror);
    html::Function getOnfocus();
    void setOnfocus(html::Function onfocus);
    html::Function getOninput();
    void setOninput(html::Function oninput);
    html::Function getOninvalid();
    void setOninvalid(html::Function oninvalid);
    html::Function getOnkeydown();
    void setOnkeydown(html::Function onkeydown);
    html::Function getOnkeypress();
    void setOnkeypress(html::Function onkeypress);
    html::Function getOnkeyup();
    void setOnkeyup(html::Function onkeyup);
    html::Function getOnload();
    void setOnload(html::Function onload);
    html::Function getOnloadeddata();
    void setOnloadeddata(html::Function onloadeddata);
    html::Function getOnloadedmetadata();
    void setOnloadedmetadata(html::Function onloadedmetadata);
    html::Function getOnloadstart();
    void setOnloadstart(html::Function onloadstart);
    html::Function getOnmousedown();
    void setOnmousedown(html::Function onmousedown);
    html::Function getOnmousemove();
    void setOnmousemove(html::Function onmousemove);
    html::Function getOnmouseout();
    void setOnmouseout(html::Function onmouseout);
    html::Function getOnmouseover();
    void setOnmouseover(html::Function onmouseover);
    html::Function getOnmouseup();
    void setOnmouseup(html::Function onmouseup);
    html::Function getOnmousewheel();
    void setOnmousewheel(html::Function onmousewheel);
    html::Function getOnpause();
    void setOnpause(html::Function onpause);
    html::Function getOnplay();
    void setOnplay(html::Function onplay);
    html::Function getOnplaying();
    void setOnplaying(html::Function onplaying);
    html::Function getOnprogress();
    void setOnprogress(html::Function onprogress);
    html::Function getOnratechange();
    void setOnratechange(html::Function onratechange);
    html::Function getOnreadystatechange();
    void setOnreadystatechange(html::Function onreadystatechange);
    html::Function getOnreset();
    void setOnreset(html::Function onreset);
    html::Function getOnscroll();
    void setOnscroll(html::Function onscroll);
    html::Function getOnseeked();
    void setOnseeked(html::Function onseeked);
    html::Function getOnseeking();
    void setOnseeking(html::Function onseeking);
    html::Function getOnselect();
    void setOnselect(html::Function onselect);
    html::Function getOnshow();
    void setOnshow(html::Function onshow);
    html::Function getOnstalled();
    void setOnstalled(html::Function onstalled);
    html::Function getOnsubmit();
    void setOnsubmit(html::Function onsubmit);
    html::Function getOnsuspend();
    void setOnsuspend(html::Function onsuspend);
    html::Function getOntimeupdate();
    void setOntimeupdate(html::Function ontimeupdate);
    html::Function getOnvolumechange();
    void setOnvolumechange(html::Function onvolumechange);
    html::Function getOnwaiting();
    void setOnwaiting(html::Function onwaiting);
    // HTMLDocument-34
    std::u16string getFgColor();
    void setFgColor(const std::u16string& fgColor);
    std::u16string getBgColor();
    void setBgColor(const std::u16string& bgColor);
    std::u16string getLinkColor();
    void setLinkColor(const std::u16string& linkColor);
    std::u16string getVlinkColor();
    void setVlinkColor(const std::u16string& vlinkColor);
    std::u16string getAlinkColor();
    void setAlinkColor(const std::u16string& alinkColor);
    html::HTMLCollection getAnchors();
    html::HTMLCollection getApplets();
    void clear();
    html::HTMLAllCollection getAll();
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return html::HTMLDocument::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return html::HTMLDocument::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_HTMLDOCUMENTIMP_H_INCLUDED
