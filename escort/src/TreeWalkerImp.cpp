// Generated by esidl 0.2.1.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#include "TreeWalkerImp.h"

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{

Node TreeWalkerImp::getRoot()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

unsigned int TreeWalkerImp::getWhatToShow()
{
    // TODO: implement me!
    return 0;
}

traversal::NodeFilter TreeWalkerImp::getFilter()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

bool TreeWalkerImp::getExpandEntityReferences()
{
    // TODO: implement me!
    return 0;
}

Node TreeWalkerImp::getCurrentNode()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

void TreeWalkerImp::setCurrentNode(Node currentNode) throw(DOMException)
{
    // TODO: implement me!
}

Node TreeWalkerImp::parentNode()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

Node TreeWalkerImp::firstChild()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

Node TreeWalkerImp::lastChild()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

Node TreeWalkerImp::previousSibling()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

Node TreeWalkerImp::nextSibling()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

Node TreeWalkerImp::previousNode()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

Node TreeWalkerImp::nextNode()
{
    // TODO: implement me!
    return static_cast<Object*>(0);
}

}
}
}
}
